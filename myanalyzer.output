Terminals unused in grammar

    KW_OF
    KW_WRITE
    KW_COMP
    KW_ENDCOMP


Grammar

    0 $accept: input $end

    1 input: listOfExprs

    2 listOfExprs: ε
    3            | listOfExprs stmt

    4 main_func: KW_DEF KW_MAIN '(' ')' ':' func_body KW_ENDDEF ';'

    5 stmt: main_func
    6     | var_dec stmt
    7     | const_dec stmt
    8     | func_dec stmt

    9 expr: expr '-' expr
   10     | expr '*' expr
   11     | expr '/' expr
   12     | expr '%' expr
   13     | expr '+' expr
   14     | expr TK_POW expr
   15     | TK_IDENT '[' expr ']'
   16     | '(' expr ')'
   17     | func_call
   18     | lib_funcs
   19     | expr '<' expr
   20     | expr '>' expr
   21     | expr TK_LE expr
   22     | expr TK_GE expr
   23     | expr TK_EQUALS expr
   24     | expr TK_NOTEQUALS expr
   25     | KW_NOT expr
   26     | expr KW_AND expr
   27     | expr KW_OR expr
   28     | expr INCR expr
   29     | expr DECR expr
   30     | expr MUL expr
   31     | expr DIV expr
   32     | expr MOD expr
   33     | expr '=' expr
   34     | '-' expr
   35     | TK_INT
   36     | TK_REAL
   37     | TK_STRING
   38     | TK_IDENT

   39 commandList: command
   40            | commandList command

   41 command: assign
   42        | if_block
   43        | for_block
   44        | return_block
   45        | while_block
   46        | KW_BREAK ';'
   47        | KW_CONTINUE ';'
   48        | lib_funcs ';'
   49        | func_call ';'
   50        | array_init

   51 var_dec: identifier_list ':' data_types ';'

   52 const_dec: KW_CONST identifier_list ':' data_types ';'

   53 func_dec: KW_DEF TK_IDENT '(' arg_dec ')' ':' func_body KW_ENDDEF ';'
   54         | KW_DEF TK_IDENT '(' arg_dec ')' '-' '>' data_types ':' func_body KW_ENDDEF ';'

   55 func_body: command
   56          | var_dec func_body
   57          | const_dec func_body
   58          | command func_body

   59 identifier_list: TK_IDENT
   60                | identifier_list ',' TK_IDENT
   61                | TK_IDENT '[' TK_INT ']'
   62                | TK_IDENT '[' ']'
   63                | TK_IDENT '=' expr
   64                | identifier_list ',' TK_IDENT '=' expr

   65 data_types: KW_INTEGER
   66           | KW_SCALAR
   67           | KW_STR
   68           | KW_BOOLEAN

   69 arg_dec: ε
   70        | TK_IDENT ':' data_types
   71        | arg_dec ',' TK_IDENT ':' data_types

   72 func_call: TK_IDENT '(' func_args ')'

   73 func_args: ε
   74          | expr
   75          | func_args ',' expr

   76 assign: TK_IDENT '=' expr ';'

   77 if_block: KW_IF '(' expr ')' ':' commandList KW_ENDIF ';'
   78         | KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'

   79 for_block: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'

   81 return_block: KW_RETURN ';'
   82             | KW_RETURN expr ';'

   83 while_block: KW_WHILE '(' expr ')' ':' commandList KW_ENDWHILE ';'

   84 array_init: TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'

   85 lib_funcs: KW_WRITESTR '(' func_args ')'
   86          | KW_WRITEINT '(' func_args ')'
   87          | KW_WRITESCAL '(' func_args ')'
   88          | KW_READSTR '(' ')'
   89          | KW_READINT '(' ')'
   90          | KW_READSCAL '(' ')'


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 12
    '(' (40) 4 16 53 54 72 77 78 83 85 86 87 88 89 90
    ')' (41) 4 16 53 54 72 77 78 83 85 86 87 88 89 90
    '*' (42) 10
    '+' (43) 13
    ',' (44) 60 64 71 75
    '-' (45) 9 34 54
    '/' (47) 11
    ':' (58) 4 51 52 53 54 70 71 77 78 79 80 83 84
    ';' (59) 4 46 47 48 49 51 52 53 54 76 77 78 79 80 81 82 83 84
    '<' (60) 19
    '=' (61) 33 63 64 76
    '>' (62) 20 54
    '[' (91) 15 61 62 79 80 84
    ']' (93) 15 61 62 79 80 84
    error (256)
    TK_IDENT <str> (258) 15 38 53 54 59 60 61 62 63 64 70 71 72 76 79 80 84
    TK_INT <str> (259) 35 61
    TK_STRING <str> (260) 37
    TK_REAL <str> (261) 36
    KW_CONST (262) 52
    KW_ENDIF (263) 77 78
    KW_FOR (264) 79 80 84
    KW_IN (265) 79 80
    KW_ENDFOR (266) 79 80
    KW_WHILE (267) 83
    KW_ENDWHILE (268) 83
    KW_BREAK (269) 46
    KW_CONTINUE (270) 47
    KW_DEF (271) 4 53 54
    KW_ENDDEF (272) 4 53 54
    KW_MAIN (273) 4
    KW_RETURN (274) 81 82
    KW_OF (275)
    KW_READSTR (276) 88
    KW_READINT (277) 89
    KW_READSCAL (278) 90
    KW_WRITESTR (279) 85
    KW_WRITEINT (280) 86
    KW_WRITESCAL (281) 87
    KW_WRITE (282)
    KW_IF (283) 77 78
    KW_ELSE (284) 78
    KW_INTEGER (285) 65
    KW_SCALAR (286) 66
    KW_BOOLEAN (287) 68
    KW_STR (288) 67
    KW_COMP (289)
    KW_ENDCOMP (290)
    TK_POW (291) 14
    KW_AND (292) 26
    KW_OR (293) 27
    KW_NOT (294) 25
    TK_EQUALS (295) 23
    TK_NOTEQUALS (296) 24
    INCR (297) 28
    DECR (298) 29
    MUL (299) 30
    DIV (300) 31
    MOD (301) 32
    TK_ASSGN (302) 84
    TK_LE (303) 21
    TK_GE (304) 22


Nonterminals, with rules where they appear

    $accept (65)
        on left: 0
    input (66)
        on left: 1
        on right: 0
    listOfExprs <str> (67)
        on left: 2 3
        on right: 1 3
    main_func <str> (68)
        on left: 4
        on right: 5
    stmt <str> (69)
        on left: 5 6 7 8
        on right: 3 6 7 8
    expr <str> (70)
        on left: 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
        on right: 9 10 11 12 13 14 15 16 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 63 64 74 75 76 77 78 79 80 82 83 84
    commandList <str> (71)
        on left: 39 40
        on right: 40 77 78 79 80 83
    command <str> (72)
        on left: 41 42 43 44 45 46 47 48 49 50
        on right: 39 40 55 58
    var_dec <str> (73)
        on left: 51
        on right: 6 56
    const_dec <str> (74)
        on left: 52
        on right: 7 57
    func_dec <str> (75)
        on left: 53 54
        on right: 8
    func_body <str> (76)
        on left: 55 56 57 58
        on right: 4 53 54 56 57 58
    identifier_list <str> (77)
        on left: 59 60 61 62 63 64
        on right: 51 52 60 64
    data_types <str> (78)
        on left: 65 66 67 68
        on right: 51 52 54 70 71 84
    arg_dec <str> (79)
        on left: 69 70 71
        on right: 53 54 71
    func_call <str> (80)
        on left: 72
        on right: 17 49
    func_args <str> (81)
        on left: 73 74 75
        on right: 72 75 85 86 87
    assign <str> (82)
        on left: 76
        on right: 41
    if_block <str> (83)
        on left: 77 78
        on right: 42
    for_block <str> (84)
        on left: 79 80
        on right: 43
    return_block <str> (85)
        on left: 81 82
        on right: 44
    while_block <str> (86)
        on left: 83
        on right: 45
    array_init <str> (87)
        on left: 84
        on right: 50
    lib_funcs <str> (88)
        on left: 85 86 87 88 89 90
        on right: 18 48


State 0

    0 $accept: • input $end
    1 input: • listOfExprs
    2 listOfExprs: ε •
    3            | • listOfExprs stmt

    $default  reduce using rule 2 (listOfExprs)

    input        go to state 1
    listOfExprs  go to state 2


State 1

    0 $accept: input • $end

    $end  shift, and go to state 3


State 2

    1 input: listOfExprs •  [$end]
    3 listOfExprs: listOfExprs • stmt
    4 main_func: • KW_DEF KW_MAIN '(' ')' ':' func_body KW_ENDDEF ';'
    5 stmt: • main_func
    6     | • var_dec stmt
    7     | • const_dec stmt
    8     | • func_dec stmt
   51 var_dec: • identifier_list ':' data_types ';'
   52 const_dec: • KW_CONST identifier_list ':' data_types ';'
   53 func_dec: • KW_DEF TK_IDENT '(' arg_dec ')' ':' func_body KW_ENDDEF ';'
   54         | • KW_DEF TK_IDENT '(' arg_dec ')' '-' '>' data_types ':' func_body KW_ENDDEF ';'
   59 identifier_list: • TK_IDENT
   60                | • identifier_list ',' TK_IDENT
   61                | • TK_IDENT '[' TK_INT ']'
   62                | • TK_IDENT '[' ']'
   63                | • TK_IDENT '=' expr
   64                | • identifier_list ',' TK_IDENT '=' expr

    TK_IDENT  shift, and go to state 4
    KW_CONST  shift, and go to state 5
    KW_DEF    shift, and go to state 6

    $default  reduce using rule 1 (input)

    main_func        go to state 7
    stmt             go to state 8
    var_dec          go to state 9
    const_dec        go to state 10
    func_dec         go to state 11
    identifier_list  go to state 12


State 3

    0 $accept: input $end •

    $default  accept


State 4

   59 identifier_list: TK_IDENT •  [':', ',']
   61                | TK_IDENT • '[' TK_INT ']'
   62                | TK_IDENT • '[' ']'
   63                | TK_IDENT • '=' expr

    '='  shift, and go to state 13
    '['  shift, and go to state 14

    $default  reduce using rule 59 (identifier_list)


State 5

   52 const_dec: KW_CONST • identifier_list ':' data_types ';'
   59 identifier_list: • TK_IDENT
   60                | • identifier_list ',' TK_IDENT
   61                | • TK_IDENT '[' TK_INT ']'
   62                | • TK_IDENT '[' ']'
   63                | • TK_IDENT '=' expr
   64                | • identifier_list ',' TK_IDENT '=' expr

    TK_IDENT  shift, and go to state 4

    identifier_list  go to state 15


State 6

    4 main_func: KW_DEF • KW_MAIN '(' ')' ':' func_body KW_ENDDEF ';'
   53 func_dec: KW_DEF • TK_IDENT '(' arg_dec ')' ':' func_body KW_ENDDEF ';'
   54         | KW_DEF • TK_IDENT '(' arg_dec ')' '-' '>' data_types ':' func_body KW_ENDDEF ';'

    TK_IDENT  shift, and go to state 16
    KW_MAIN   shift, and go to state 17


State 7

    5 stmt: main_func •

    $default  reduce using rule 5 (stmt)


State 8

    3 listOfExprs: listOfExprs stmt •

    $default  reduce using rule 3 (listOfExprs)


State 9

    4 main_func: • KW_DEF KW_MAIN '(' ')' ':' func_body KW_ENDDEF ';'
    5 stmt: • main_func
    6     | • var_dec stmt
    6     | var_dec • stmt
    7     | • const_dec stmt
    8     | • func_dec stmt
   51 var_dec: • identifier_list ':' data_types ';'
   52 const_dec: • KW_CONST identifier_list ':' data_types ';'
   53 func_dec: • KW_DEF TK_IDENT '(' arg_dec ')' ':' func_body KW_ENDDEF ';'
   54         | • KW_DEF TK_IDENT '(' arg_dec ')' '-' '>' data_types ':' func_body KW_ENDDEF ';'
   59 identifier_list: • TK_IDENT
   60                | • identifier_list ',' TK_IDENT
   61                | • TK_IDENT '[' TK_INT ']'
   62                | • TK_IDENT '[' ']'
   63                | • TK_IDENT '=' expr
   64                | • identifier_list ',' TK_IDENT '=' expr

    TK_IDENT  shift, and go to state 4
    KW_CONST  shift, and go to state 5
    KW_DEF    shift, and go to state 6

    main_func        go to state 7
    stmt             go to state 18
    var_dec          go to state 9
    const_dec        go to state 10
    func_dec         go to state 11
    identifier_list  go to state 12


State 10

    4 main_func: • KW_DEF KW_MAIN '(' ')' ':' func_body KW_ENDDEF ';'
    5 stmt: • main_func
    6     | • var_dec stmt
    7     | • const_dec stmt
    7     | const_dec • stmt
    8     | • func_dec stmt
   51 var_dec: • identifier_list ':' data_types ';'
   52 const_dec: • KW_CONST identifier_list ':' data_types ';'
   53 func_dec: • KW_DEF TK_IDENT '(' arg_dec ')' ':' func_body KW_ENDDEF ';'
   54         | • KW_DEF TK_IDENT '(' arg_dec ')' '-' '>' data_types ':' func_body KW_ENDDEF ';'
   59 identifier_list: • TK_IDENT
   60                | • identifier_list ',' TK_IDENT
   61                | • TK_IDENT '[' TK_INT ']'
   62                | • TK_IDENT '[' ']'
   63                | • TK_IDENT '=' expr
   64                | • identifier_list ',' TK_IDENT '=' expr

    TK_IDENT  shift, and go to state 4
    KW_CONST  shift, and go to state 5
    KW_DEF    shift, and go to state 6

    main_func        go to state 7
    stmt             go to state 19
    var_dec          go to state 9
    const_dec        go to state 10
    func_dec         go to state 11
    identifier_list  go to state 12


State 11

    4 main_func: • KW_DEF KW_MAIN '(' ')' ':' func_body KW_ENDDEF ';'
    5 stmt: • main_func
    6     | • var_dec stmt
    7     | • const_dec stmt
    8     | • func_dec stmt
    8     | func_dec • stmt
   51 var_dec: • identifier_list ':' data_types ';'
   52 const_dec: • KW_CONST identifier_list ':' data_types ';'
   53 func_dec: • KW_DEF TK_IDENT '(' arg_dec ')' ':' func_body KW_ENDDEF ';'
   54         | • KW_DEF TK_IDENT '(' arg_dec ')' '-' '>' data_types ':' func_body KW_ENDDEF ';'
   59 identifier_list: • TK_IDENT
   60                | • identifier_list ',' TK_IDENT
   61                | • TK_IDENT '[' TK_INT ']'
   62                | • TK_IDENT '[' ']'
   63                | • TK_IDENT '=' expr
   64                | • identifier_list ',' TK_IDENT '=' expr

    TK_IDENT  shift, and go to state 4
    KW_CONST  shift, and go to state 5
    KW_DEF    shift, and go to state 6

    main_func        go to state 7
    stmt             go to state 20
    var_dec          go to state 9
    const_dec        go to state 10
    func_dec         go to state 11
    identifier_list  go to state 12


State 12

   51 var_dec: identifier_list • ':' data_types ';'
   60 identifier_list: identifier_list • ',' TK_IDENT
   64                | identifier_list • ',' TK_IDENT '=' expr

    ':'  shift, and go to state 21
    ','  shift, and go to state 22


State 13

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   63 identifier_list: TK_IDENT '=' • expr
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 36
    func_call  go to state 37
    lib_funcs  go to state 38


State 14

   61 identifier_list: TK_IDENT '[' • TK_INT ']'
   62                | TK_IDENT '[' • ']'

    TK_INT  shift, and go to state 39
    ']'     shift, and go to state 40


State 15

   52 const_dec: KW_CONST identifier_list • ':' data_types ';'
   60 identifier_list: identifier_list • ',' TK_IDENT
   64                | identifier_list • ',' TK_IDENT '=' expr

    ':'  shift, and go to state 41
    ','  shift, and go to state 22


State 16

   53 func_dec: KW_DEF TK_IDENT • '(' arg_dec ')' ':' func_body KW_ENDDEF ';'
   54         | KW_DEF TK_IDENT • '(' arg_dec ')' '-' '>' data_types ':' func_body KW_ENDDEF ';'

    '('  shift, and go to state 42


State 17

    4 main_func: KW_DEF KW_MAIN • '(' ')' ':' func_body KW_ENDDEF ';'

    '('  shift, and go to state 43


State 18

    6 stmt: var_dec stmt •

    $default  reduce using rule 6 (stmt)


State 19

    7 stmt: const_dec stmt •

    $default  reduce using rule 7 (stmt)


State 20

    8 stmt: func_dec stmt •

    $default  reduce using rule 8 (stmt)


State 21

   51 var_dec: identifier_list ':' • data_types ';'
   65 data_types: • KW_INTEGER
   66           | • KW_SCALAR
   67           | • KW_STR
   68           | • KW_BOOLEAN

    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_BOOLEAN  shift, and go to state 46
    KW_STR      shift, and go to state 47

    data_types  go to state 48


State 22

   60 identifier_list: identifier_list ',' • TK_IDENT
   64                | identifier_list ',' • TK_IDENT '=' expr

    TK_IDENT  shift, and go to state 49


State 23

   15 expr: TK_IDENT • '[' expr ']'
   38     | TK_IDENT •  [KW_FOR, TK_POW, KW_AND, KW_OR, TK_EQUALS, TK_NOTEQUALS, INCR, DECR, MUL, DIV, MOD, '=', '<', '>', TK_LE, TK_GE, '+', '-', '*', '/', '%', ')', ':', ';', ']', ',']
   72 func_call: TK_IDENT • '(' func_args ')'

    '('  shift, and go to state 50
    '['  shift, and go to state 51

    $default  reduce using rule 38 (expr)


State 24

   35 expr: TK_INT •

    $default  reduce using rule 35 (expr)


State 25

   37 expr: TK_STRING •

    $default  reduce using rule 37 (expr)


State 26

   36 expr: TK_REAL •

    $default  reduce using rule 36 (expr)


State 27

   88 lib_funcs: KW_READSTR • '(' ')'

    '('  shift, and go to state 52


State 28

   89 lib_funcs: KW_READINT • '(' ')'

    '('  shift, and go to state 53


State 29

   90 lib_funcs: KW_READSCAL • '(' ')'

    '('  shift, and go to state 54


State 30

   85 lib_funcs: KW_WRITESTR • '(' func_args ')'

    '('  shift, and go to state 55


State 31

   86 lib_funcs: KW_WRITEINT • '(' func_args ')'

    '('  shift, and go to state 56


State 32

   87 lib_funcs: KW_WRITESCAL • '(' func_args ')'

    '('  shift, and go to state 57


State 33

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   25     | KW_NOT • expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 58
    func_call  go to state 37
    lib_funcs  go to state 38


State 34

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   34     | '-' • expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 59
    func_call  go to state 37
    lib_funcs  go to state 38


State 35

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   16     | '(' • expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 60
    func_call  go to state 37
    lib_funcs  go to state 38


State 36

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr
   63 identifier_list: TK_IDENT '=' expr •  [':', ',']

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80

    $default  reduce using rule 63 (identifier_list)


State 37

   17 expr: func_call •

    $default  reduce using rule 17 (expr)


State 38

   18 expr: lib_funcs •

    $default  reduce using rule 18 (expr)


State 39

   61 identifier_list: TK_IDENT '[' TK_INT • ']'

    ']'  shift, and go to state 81


State 40

   62 identifier_list: TK_IDENT '[' ']' •

    $default  reduce using rule 62 (identifier_list)


State 41

   52 const_dec: KW_CONST identifier_list ':' • data_types ';'
   65 data_types: • KW_INTEGER
   66           | • KW_SCALAR
   67           | • KW_STR
   68           | • KW_BOOLEAN

    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_BOOLEAN  shift, and go to state 46
    KW_STR      shift, and go to state 47

    data_types  go to state 82


State 42

   53 func_dec: KW_DEF TK_IDENT '(' • arg_dec ')' ':' func_body KW_ENDDEF ';'
   54         | KW_DEF TK_IDENT '(' • arg_dec ')' '-' '>' data_types ':' func_body KW_ENDDEF ';'
   69 arg_dec: ε •  [')', ',']
   70        | • TK_IDENT ':' data_types
   71        | • arg_dec ',' TK_IDENT ':' data_types

    TK_IDENT  shift, and go to state 83

    $default  reduce using rule 69 (arg_dec)

    arg_dec  go to state 84


State 43

    4 main_func: KW_DEF KW_MAIN '(' • ')' ':' func_body KW_ENDDEF ';'

    ')'  shift, and go to state 85


State 44

   65 data_types: KW_INTEGER •

    $default  reduce using rule 65 (data_types)


State 45

   66 data_types: KW_SCALAR •

    $default  reduce using rule 66 (data_types)


State 46

   68 data_types: KW_BOOLEAN •

    $default  reduce using rule 68 (data_types)


State 47

   67 data_types: KW_STR •

    $default  reduce using rule 67 (data_types)


State 48

   51 var_dec: identifier_list ':' data_types • ';'

    ';'  shift, and go to state 86


State 49

   60 identifier_list: identifier_list ',' TK_IDENT •  [':', ',']
   64                | identifier_list ',' TK_IDENT • '=' expr

    '='  shift, and go to state 87

    $default  reduce using rule 60 (identifier_list)


State 50

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   72          | TK_IDENT '(' • func_args ')'
   73 func_args: ε •  [')', ',']
   74          | • expr
   75          | • func_args ',' expr
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    $default  reduce using rule 73 (func_args)

    expr       go to state 88
    func_call  go to state 37
    func_args  go to state 89
    lib_funcs  go to state 38


State 51

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   15     | TK_IDENT '[' • expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 90
    func_call  go to state 37
    lib_funcs  go to state 38


State 52

   88 lib_funcs: KW_READSTR '(' • ')'

    ')'  shift, and go to state 91


State 53

   89 lib_funcs: KW_READINT '(' • ')'

    ')'  shift, and go to state 92


State 54

   90 lib_funcs: KW_READSCAL '(' • ')'

    ')'  shift, and go to state 93


State 55

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   73 func_args: ε •  [')', ',']
   74          | • expr
   75          | • func_args ',' expr
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   85          | KW_WRITESTR '(' • func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    $default  reduce using rule 73 (func_args)

    expr       go to state 88
    func_call  go to state 37
    func_args  go to state 94
    lib_funcs  go to state 38


State 56

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   73 func_args: ε •  [')', ',']
   74          | • expr
   75          | • func_args ',' expr
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   86          | KW_WRITEINT '(' • func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    $default  reduce using rule 73 (func_args)

    expr       go to state 88
    func_call  go to state 37
    func_args  go to state 95
    lib_funcs  go to state 38


State 57

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   73 func_args: ε •  [')', ',']
   74          | • expr
   75          | • func_args ',' expr
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   87          | KW_WRITESCAL '(' • func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    $default  reduce using rule 73 (func_args)

    expr       go to state 88
    func_call  go to state 37
    func_args  go to state 96
    lib_funcs  go to state 38


State 58

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   25     | KW_NOT expr •  [KW_FOR, KW_AND, KW_OR, INCR, DECR, MUL, DIV, MOD, '=', ')', ':', ';', ']', ',']
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW        shift, and go to state 61
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80

    $default  reduce using rule 25 (expr)

    Conflict between rule 25 and token TK_POW resolved as shift (KW_NOT < TK_POW).
    Conflict between rule 25 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 25 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 25 and token TK_EQUALS resolved as shift (KW_NOT < TK_EQUALS).
    Conflict between rule 25 and token TK_NOTEQUALS resolved as shift (KW_NOT < TK_NOTEQUALS).
    Conflict between rule 25 and token INCR resolved as reduce (INCR < KW_NOT).
    Conflict between rule 25 and token DECR resolved as reduce (DECR < KW_NOT).
    Conflict between rule 25 and token MUL resolved as reduce (MUL < KW_NOT).
    Conflict between rule 25 and token DIV resolved as reduce (DIV < KW_NOT).
    Conflict between rule 25 and token MOD resolved as reduce (MOD < KW_NOT).
    Conflict between rule 25 and token '=' resolved as reduce ('=' < KW_NOT).
    Conflict between rule 25 and token '<' resolved as shift (KW_NOT < '<').
    Conflict between rule 25 and token '>' resolved as shift (KW_NOT < '>').
    Conflict between rule 25 and token TK_LE resolved as shift (KW_NOT < TK_LE).
    Conflict between rule 25 and token TK_GE resolved as shift (KW_NOT < TK_GE).
    Conflict between rule 25 and token '+' resolved as shift (KW_NOT < '+').
    Conflict between rule 25 and token '-' resolved as shift (KW_NOT < '-').
    Conflict between rule 25 and token '*' resolved as shift (KW_NOT < '*').
    Conflict between rule 25 and token '/' resolved as shift (KW_NOT < '/').
    Conflict between rule 25 and token '%' resolved as shift (KW_NOT < '%').


State 59

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr
   34     | '-' expr •  [KW_FOR, KW_AND, KW_OR, TK_EQUALS, TK_NOTEQUALS, INCR, DECR, MUL, DIV, MOD, '=', '<', '>', TK_LE, TK_GE, '+', '-', ')', ':', ';', ']', ',']

    TK_POW  shift, and go to state 61
    '*'     shift, and go to state 78
    '/'     shift, and go to state 79
    '%'     shift, and go to state 80

    $default  reduce using rule 34 (expr)

    Conflict between rule 34 and token TK_POW resolved as shift ('-' < TK_POW).
    Conflict between rule 34 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 34 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 34 and token TK_EQUALS resolved as reduce (TK_EQUALS < '-').
    Conflict between rule 34 and token TK_NOTEQUALS resolved as reduce (TK_NOTEQUALS < '-').
    Conflict between rule 34 and token INCR resolved as reduce (INCR < '-').
    Conflict between rule 34 and token DECR resolved as reduce (DECR < '-').
    Conflict between rule 34 and token MUL resolved as reduce (MUL < '-').
    Conflict between rule 34 and token DIV resolved as reduce (DIV < '-').
    Conflict between rule 34 and token MOD resolved as reduce (MOD < '-').
    Conflict between rule 34 and token '=' resolved as reduce ('=' < '-').
    Conflict between rule 34 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 34 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 34 and token TK_LE resolved as reduce (TK_LE < '-').
    Conflict between rule 34 and token TK_GE resolved as reduce (TK_GE < '-').
    Conflict between rule 34 and token '+' resolved as reduce (%left '+').
    Conflict between rule 34 and token '-' resolved as reduce (%left '-').
    Conflict between rule 34 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 34 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 34 and token '%' resolved as shift ('-' < '%').


State 60

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   16     | '(' expr • ')'
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80
    ')'           shift, and go to state 97


State 61

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   14     | expr TK_POW • expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 98
    func_call  go to state 37
    lib_funcs  go to state 38


State 62

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   26     | expr KW_AND • expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 99
    func_call  go to state 37
    lib_funcs  go to state 38


State 63

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   27     | expr KW_OR • expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 100
    func_call  go to state 37
    lib_funcs  go to state 38


State 64

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   23     | expr TK_EQUALS • expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 101
    func_call  go to state 37
    lib_funcs  go to state 38


State 65

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   24     | expr TK_NOTEQUALS • expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 102
    func_call  go to state 37
    lib_funcs  go to state 38


State 66

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   28     | expr INCR • expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 103
    func_call  go to state 37
    lib_funcs  go to state 38


State 67

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   29     | expr DECR • expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 104
    func_call  go to state 37
    lib_funcs  go to state 38


State 68

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   30     | expr MUL • expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 105
    func_call  go to state 37
    lib_funcs  go to state 38


State 69

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   31     | expr DIV • expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 106
    func_call  go to state 37
    lib_funcs  go to state 38


State 70

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   32     | expr MOD • expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 107
    func_call  go to state 37
    lib_funcs  go to state 38


State 71

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   33     | expr '=' • expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 108
    func_call  go to state 37
    lib_funcs  go to state 38


State 72

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   19     | expr '<' • expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 109
    func_call  go to state 37
    lib_funcs  go to state 38


State 73

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   20     | expr '>' • expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 110
    func_call  go to state 37
    lib_funcs  go to state 38


State 74

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   21     | expr TK_LE • expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 111
    func_call  go to state 37
    lib_funcs  go to state 38


State 75

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   22     | expr TK_GE • expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 112
    func_call  go to state 37
    lib_funcs  go to state 38


State 76

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   13     | expr '+' • expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 113
    func_call  go to state 37
    lib_funcs  go to state 38


State 77

    9 expr: • expr '-' expr
    9     | expr '-' • expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 114
    func_call  go to state 37
    lib_funcs  go to state 38


State 78

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   10     | expr '*' • expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 115
    func_call  go to state 37
    lib_funcs  go to state 38


State 79

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   11     | expr '/' • expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 116
    func_call  go to state 37
    lib_funcs  go to state 38


State 80

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   12     | expr '%' • expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 117
    func_call  go to state 37
    lib_funcs  go to state 38


State 81

   61 identifier_list: TK_IDENT '[' TK_INT ']' •

    $default  reduce using rule 61 (identifier_list)


State 82

   52 const_dec: KW_CONST identifier_list ':' data_types • ';'

    ';'  shift, and go to state 118


State 83

   70 arg_dec: TK_IDENT • ':' data_types

    ':'  shift, and go to state 119


State 84

   53 func_dec: KW_DEF TK_IDENT '(' arg_dec • ')' ':' func_body KW_ENDDEF ';'
   54         | KW_DEF TK_IDENT '(' arg_dec • ')' '-' '>' data_types ':' func_body KW_ENDDEF ';'
   71 arg_dec: arg_dec • ',' TK_IDENT ':' data_types

    ')'  shift, and go to state 120
    ','  shift, and go to state 121


State 85

    4 main_func: KW_DEF KW_MAIN '(' ')' • ':' func_body KW_ENDDEF ';'

    ':'  shift, and go to state 122


State 86

   51 var_dec: identifier_list ':' data_types ';' •

    $default  reduce using rule 51 (var_dec)


State 87

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   64 identifier_list: identifier_list ',' TK_IDENT '=' • expr
   72 func_call: • TK_IDENT '(' func_args ')'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 123
    func_call  go to state 37
    lib_funcs  go to state 38


State 88

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr
   74 func_args: expr •  [')', ',']

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80

    $default  reduce using rule 74 (func_args)


State 89

   72 func_call: TK_IDENT '(' func_args • ')'
   75 func_args: func_args • ',' expr

    ')'  shift, and go to state 124
    ','  shift, and go to state 125


State 90

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   15     | TK_IDENT '[' expr • ']'
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80
    ']'           shift, and go to state 126


State 91

   88 lib_funcs: KW_READSTR '(' ')' •

    $default  reduce using rule 88 (lib_funcs)


State 92

   89 lib_funcs: KW_READINT '(' ')' •

    $default  reduce using rule 89 (lib_funcs)


State 93

   90 lib_funcs: KW_READSCAL '(' ')' •

    $default  reduce using rule 90 (lib_funcs)


State 94

   75 func_args: func_args • ',' expr
   85 lib_funcs: KW_WRITESTR '(' func_args • ')'

    ')'  shift, and go to state 127
    ','  shift, and go to state 125


State 95

   75 func_args: func_args • ',' expr
   86 lib_funcs: KW_WRITEINT '(' func_args • ')'

    ')'  shift, and go to state 128
    ','  shift, and go to state 125


State 96

   75 func_args: func_args • ',' expr
   87 lib_funcs: KW_WRITESCAL '(' func_args • ')'

    ')'  shift, and go to state 129
    ','  shift, and go to state 125


State 97

   16 expr: '(' expr ')' •

    $default  reduce using rule 16 (expr)


State 98

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   14     | expr TK_POW expr •  [KW_FOR, KW_AND, KW_OR, TK_EQUALS, TK_NOTEQUALS, INCR, DECR, MUL, DIV, MOD, '=', '<', '>', TK_LE, TK_GE, '+', '-', '*', '/', '%', ')', ':', ';', ']', ',']
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW  shift, and go to state 61

    $default  reduce using rule 14 (expr)

    Conflict between rule 14 and token TK_POW resolved as shift (%right TK_POW).
    Conflict between rule 14 and token KW_AND resolved as reduce (KW_AND < TK_POW).
    Conflict between rule 14 and token KW_OR resolved as reduce (KW_OR < TK_POW).
    Conflict between rule 14 and token TK_EQUALS resolved as reduce (TK_EQUALS < TK_POW).
    Conflict between rule 14 and token TK_NOTEQUALS resolved as reduce (TK_NOTEQUALS < TK_POW).
    Conflict between rule 14 and token INCR resolved as reduce (INCR < TK_POW).
    Conflict between rule 14 and token DECR resolved as reduce (DECR < TK_POW).
    Conflict between rule 14 and token MUL resolved as reduce (MUL < TK_POW).
    Conflict between rule 14 and token DIV resolved as reduce (DIV < TK_POW).
    Conflict between rule 14 and token MOD resolved as reduce (MOD < TK_POW).
    Conflict between rule 14 and token '=' resolved as reduce ('=' < TK_POW).
    Conflict between rule 14 and token '<' resolved as reduce ('<' < TK_POW).
    Conflict between rule 14 and token '>' resolved as reduce ('>' < TK_POW).
    Conflict between rule 14 and token TK_LE resolved as reduce (TK_LE < TK_POW).
    Conflict between rule 14 and token TK_GE resolved as reduce (TK_GE < TK_POW).
    Conflict between rule 14 and token '+' resolved as reduce ('+' < TK_POW).
    Conflict between rule 14 and token '-' resolved as reduce ('-' < TK_POW).
    Conflict between rule 14 and token '*' resolved as reduce ('*' < TK_POW).
    Conflict between rule 14 and token '/' resolved as reduce ('/' < TK_POW).
    Conflict between rule 14 and token '%' resolved as reduce ('%' < TK_POW).


State 99

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   26     | expr KW_AND expr •  [KW_FOR, KW_AND, KW_OR, INCR, DECR, MUL, DIV, MOD, '=', ')', ':', ';', ']', ',']
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW        shift, and go to state 61
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80

    $default  reduce using rule 26 (expr)

    Conflict between rule 26 and token TK_POW resolved as shift (KW_AND < TK_POW).
    Conflict between rule 26 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 26 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 26 and token TK_EQUALS resolved as shift (KW_AND < TK_EQUALS).
    Conflict between rule 26 and token TK_NOTEQUALS resolved as shift (KW_AND < TK_NOTEQUALS).
    Conflict between rule 26 and token INCR resolved as reduce (INCR < KW_AND).
    Conflict between rule 26 and token DECR resolved as reduce (DECR < KW_AND).
    Conflict between rule 26 and token MUL resolved as reduce (MUL < KW_AND).
    Conflict between rule 26 and token DIV resolved as reduce (DIV < KW_AND).
    Conflict between rule 26 and token MOD resolved as reduce (MOD < KW_AND).
    Conflict between rule 26 and token '=' resolved as reduce ('=' < KW_AND).
    Conflict between rule 26 and token '<' resolved as shift (KW_AND < '<').
    Conflict between rule 26 and token '>' resolved as shift (KW_AND < '>').
    Conflict between rule 26 and token TK_LE resolved as shift (KW_AND < TK_LE).
    Conflict between rule 26 and token TK_GE resolved as shift (KW_AND < TK_GE).
    Conflict between rule 26 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 26 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 26 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 26 and token '/' resolved as shift (KW_AND < '/').
    Conflict between rule 26 and token '%' resolved as shift (KW_AND < '%').


State 100

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   27     | expr KW_OR expr •  [KW_FOR, KW_OR, INCR, DECR, MUL, DIV, MOD, '=', ')', ':', ';', ']', ',']
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80

    $default  reduce using rule 27 (expr)

    Conflict between rule 27 and token TK_POW resolved as shift (KW_OR < TK_POW).
    Conflict between rule 27 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 27 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 27 and token TK_EQUALS resolved as shift (KW_OR < TK_EQUALS).
    Conflict between rule 27 and token TK_NOTEQUALS resolved as shift (KW_OR < TK_NOTEQUALS).
    Conflict between rule 27 and token INCR resolved as reduce (INCR < KW_OR).
    Conflict between rule 27 and token DECR resolved as reduce (DECR < KW_OR).
    Conflict between rule 27 and token MUL resolved as reduce (MUL < KW_OR).
    Conflict between rule 27 and token DIV resolved as reduce (DIV < KW_OR).
    Conflict between rule 27 and token MOD resolved as reduce (MOD < KW_OR).
    Conflict between rule 27 and token '=' resolved as reduce ('=' < KW_OR).
    Conflict between rule 27 and token '<' resolved as shift (KW_OR < '<').
    Conflict between rule 27 and token '>' resolved as shift (KW_OR < '>').
    Conflict between rule 27 and token TK_LE resolved as shift (KW_OR < TK_LE).
    Conflict between rule 27 and token TK_GE resolved as shift (KW_OR < TK_GE).
    Conflict between rule 27 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 27 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 27 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 27 and token '/' resolved as shift (KW_OR < '/').
    Conflict between rule 27 and token '%' resolved as shift (KW_OR < '%').


State 101

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   23     | expr TK_EQUALS expr •  [KW_FOR, KW_AND, KW_OR, TK_EQUALS, TK_NOTEQUALS, INCR, DECR, MUL, DIV, MOD, '=', ')', ':', ';', ']', ',']
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW  shift, and go to state 61
    '<'     shift, and go to state 72
    '>'     shift, and go to state 73
    TK_LE   shift, and go to state 74
    TK_GE   shift, and go to state 75
    '+'     shift, and go to state 76
    '-'     shift, and go to state 77
    '*'     shift, and go to state 78
    '/'     shift, and go to state 79
    '%'     shift, and go to state 80

    $default  reduce using rule 23 (expr)

    Conflict between rule 23 and token TK_POW resolved as shift (TK_EQUALS < TK_POW).
    Conflict between rule 23 and token KW_AND resolved as reduce (KW_AND < TK_EQUALS).
    Conflict between rule 23 and token KW_OR resolved as reduce (KW_OR < TK_EQUALS).
    Conflict between rule 23 and token TK_EQUALS resolved as reduce (%left TK_EQUALS).
    Conflict between rule 23 and token TK_NOTEQUALS resolved as reduce (%left TK_NOTEQUALS).
    Conflict between rule 23 and token INCR resolved as reduce (INCR < TK_EQUALS).
    Conflict between rule 23 and token DECR resolved as reduce (DECR < TK_EQUALS).
    Conflict between rule 23 and token MUL resolved as reduce (MUL < TK_EQUALS).
    Conflict between rule 23 and token DIV resolved as reduce (DIV < TK_EQUALS).
    Conflict between rule 23 and token MOD resolved as reduce (MOD < TK_EQUALS).
    Conflict between rule 23 and token '=' resolved as reduce ('=' < TK_EQUALS).
    Conflict between rule 23 and token '<' resolved as shift (TK_EQUALS < '<').
    Conflict between rule 23 and token '>' resolved as shift (TK_EQUALS < '>').
    Conflict between rule 23 and token TK_LE resolved as shift (TK_EQUALS < TK_LE).
    Conflict between rule 23 and token TK_GE resolved as shift (TK_EQUALS < TK_GE).
    Conflict between rule 23 and token '+' resolved as shift (TK_EQUALS < '+').
    Conflict between rule 23 and token '-' resolved as shift (TK_EQUALS < '-').
    Conflict between rule 23 and token '*' resolved as shift (TK_EQUALS < '*').
    Conflict between rule 23 and token '/' resolved as shift (TK_EQUALS < '/').
    Conflict between rule 23 and token '%' resolved as shift (TK_EQUALS < '%').


State 102

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   24     | expr TK_NOTEQUALS expr •  [KW_FOR, KW_AND, KW_OR, TK_EQUALS, TK_NOTEQUALS, INCR, DECR, MUL, DIV, MOD, '=', ')', ':', ';', ']', ',']
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW  shift, and go to state 61
    '<'     shift, and go to state 72
    '>'     shift, and go to state 73
    TK_LE   shift, and go to state 74
    TK_GE   shift, and go to state 75
    '+'     shift, and go to state 76
    '-'     shift, and go to state 77
    '*'     shift, and go to state 78
    '/'     shift, and go to state 79
    '%'     shift, and go to state 80

    $default  reduce using rule 24 (expr)

    Conflict between rule 24 and token TK_POW resolved as shift (TK_NOTEQUALS < TK_POW).
    Conflict between rule 24 and token KW_AND resolved as reduce (KW_AND < TK_NOTEQUALS).
    Conflict between rule 24 and token KW_OR resolved as reduce (KW_OR < TK_NOTEQUALS).
    Conflict between rule 24 and token TK_EQUALS resolved as reduce (%left TK_EQUALS).
    Conflict between rule 24 and token TK_NOTEQUALS resolved as reduce (%left TK_NOTEQUALS).
    Conflict between rule 24 and token INCR resolved as reduce (INCR < TK_NOTEQUALS).
    Conflict between rule 24 and token DECR resolved as reduce (DECR < TK_NOTEQUALS).
    Conflict between rule 24 and token MUL resolved as reduce (MUL < TK_NOTEQUALS).
    Conflict between rule 24 and token DIV resolved as reduce (DIV < TK_NOTEQUALS).
    Conflict between rule 24 and token MOD resolved as reduce (MOD < TK_NOTEQUALS).
    Conflict between rule 24 and token '=' resolved as reduce ('=' < TK_NOTEQUALS).
    Conflict between rule 24 and token '<' resolved as shift (TK_NOTEQUALS < '<').
    Conflict between rule 24 and token '>' resolved as shift (TK_NOTEQUALS < '>').
    Conflict between rule 24 and token TK_LE resolved as shift (TK_NOTEQUALS < TK_LE).
    Conflict between rule 24 and token TK_GE resolved as shift (TK_NOTEQUALS < TK_GE).
    Conflict between rule 24 and token '+' resolved as shift (TK_NOTEQUALS < '+').
    Conflict between rule 24 and token '-' resolved as shift (TK_NOTEQUALS < '-').
    Conflict between rule 24 and token '*' resolved as shift (TK_NOTEQUALS < '*').
    Conflict between rule 24 and token '/' resolved as shift (TK_NOTEQUALS < '/').
    Conflict between rule 24 and token '%' resolved as shift (TK_NOTEQUALS < '%').


State 103

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   28     | expr INCR expr •  [KW_FOR, ')', ':', ';', ']', ',']
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80

    $default  reduce using rule 28 (expr)

    Conflict between rule 28 and token TK_POW resolved as shift (INCR < TK_POW).
    Conflict between rule 28 and token KW_AND resolved as shift (INCR < KW_AND).
    Conflict between rule 28 and token KW_OR resolved as shift (INCR < KW_OR).
    Conflict between rule 28 and token TK_EQUALS resolved as shift (INCR < TK_EQUALS).
    Conflict between rule 28 and token TK_NOTEQUALS resolved as shift (INCR < TK_NOTEQUALS).
    Conflict between rule 28 and token INCR resolved as shift (%right INCR).
    Conflict between rule 28 and token DECR resolved as shift (%right DECR).
    Conflict between rule 28 and token MUL resolved as shift (%right MUL).
    Conflict between rule 28 and token DIV resolved as shift (%right DIV).
    Conflict between rule 28 and token MOD resolved as shift (%right MOD).
    Conflict between rule 28 and token '=' resolved as shift (%right '=').
    Conflict between rule 28 and token '<' resolved as shift (INCR < '<').
    Conflict between rule 28 and token '>' resolved as shift (INCR < '>').
    Conflict between rule 28 and token TK_LE resolved as shift (INCR < TK_LE).
    Conflict between rule 28 and token TK_GE resolved as shift (INCR < TK_GE).
    Conflict between rule 28 and token '+' resolved as shift (INCR < '+').
    Conflict between rule 28 and token '-' resolved as shift (INCR < '-').
    Conflict between rule 28 and token '*' resolved as shift (INCR < '*').
    Conflict between rule 28 and token '/' resolved as shift (INCR < '/').
    Conflict between rule 28 and token '%' resolved as shift (INCR < '%').


State 104

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   29     | expr DECR expr •  [KW_FOR, ')', ':', ';', ']', ',']
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80

    $default  reduce using rule 29 (expr)

    Conflict between rule 29 and token TK_POW resolved as shift (DECR < TK_POW).
    Conflict between rule 29 and token KW_AND resolved as shift (DECR < KW_AND).
    Conflict between rule 29 and token KW_OR resolved as shift (DECR < KW_OR).
    Conflict between rule 29 and token TK_EQUALS resolved as shift (DECR < TK_EQUALS).
    Conflict between rule 29 and token TK_NOTEQUALS resolved as shift (DECR < TK_NOTEQUALS).
    Conflict between rule 29 and token INCR resolved as shift (%right INCR).
    Conflict between rule 29 and token DECR resolved as shift (%right DECR).
    Conflict between rule 29 and token MUL resolved as shift (%right MUL).
    Conflict between rule 29 and token DIV resolved as shift (%right DIV).
    Conflict between rule 29 and token MOD resolved as shift (%right MOD).
    Conflict between rule 29 and token '=' resolved as shift (%right '=').
    Conflict between rule 29 and token '<' resolved as shift (DECR < '<').
    Conflict between rule 29 and token '>' resolved as shift (DECR < '>').
    Conflict between rule 29 and token TK_LE resolved as shift (DECR < TK_LE).
    Conflict between rule 29 and token TK_GE resolved as shift (DECR < TK_GE).
    Conflict between rule 29 and token '+' resolved as shift (DECR < '+').
    Conflict between rule 29 and token '-' resolved as shift (DECR < '-').
    Conflict between rule 29 and token '*' resolved as shift (DECR < '*').
    Conflict between rule 29 and token '/' resolved as shift (DECR < '/').
    Conflict between rule 29 and token '%' resolved as shift (DECR < '%').


State 105

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   30     | expr MUL expr •  [KW_FOR, ')', ':', ';', ']', ',']
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80

    $default  reduce using rule 30 (expr)

    Conflict between rule 30 and token TK_POW resolved as shift (MUL < TK_POW).
    Conflict between rule 30 and token KW_AND resolved as shift (MUL < KW_AND).
    Conflict between rule 30 and token KW_OR resolved as shift (MUL < KW_OR).
    Conflict between rule 30 and token TK_EQUALS resolved as shift (MUL < TK_EQUALS).
    Conflict between rule 30 and token TK_NOTEQUALS resolved as shift (MUL < TK_NOTEQUALS).
    Conflict between rule 30 and token INCR resolved as shift (%right INCR).
    Conflict between rule 30 and token DECR resolved as shift (%right DECR).
    Conflict between rule 30 and token MUL resolved as shift (%right MUL).
    Conflict between rule 30 and token DIV resolved as shift (%right DIV).
    Conflict between rule 30 and token MOD resolved as shift (%right MOD).
    Conflict between rule 30 and token '=' resolved as shift (%right '=').
    Conflict between rule 30 and token '<' resolved as shift (MUL < '<').
    Conflict between rule 30 and token '>' resolved as shift (MUL < '>').
    Conflict between rule 30 and token TK_LE resolved as shift (MUL < TK_LE).
    Conflict between rule 30 and token TK_GE resolved as shift (MUL < TK_GE).
    Conflict between rule 30 and token '+' resolved as shift (MUL < '+').
    Conflict between rule 30 and token '-' resolved as shift (MUL < '-').
    Conflict between rule 30 and token '*' resolved as shift (MUL < '*').
    Conflict between rule 30 and token '/' resolved as shift (MUL < '/').
    Conflict between rule 30 and token '%' resolved as shift (MUL < '%').


State 106

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   31     | expr DIV expr •  [KW_FOR, ')', ':', ';', ']', ',']
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80

    $default  reduce using rule 31 (expr)

    Conflict between rule 31 and token TK_POW resolved as shift (DIV < TK_POW).
    Conflict between rule 31 and token KW_AND resolved as shift (DIV < KW_AND).
    Conflict between rule 31 and token KW_OR resolved as shift (DIV < KW_OR).
    Conflict between rule 31 and token TK_EQUALS resolved as shift (DIV < TK_EQUALS).
    Conflict between rule 31 and token TK_NOTEQUALS resolved as shift (DIV < TK_NOTEQUALS).
    Conflict between rule 31 and token INCR resolved as shift (%right INCR).
    Conflict between rule 31 and token DECR resolved as shift (%right DECR).
    Conflict between rule 31 and token MUL resolved as shift (%right MUL).
    Conflict between rule 31 and token DIV resolved as shift (%right DIV).
    Conflict between rule 31 and token MOD resolved as shift (%right MOD).
    Conflict between rule 31 and token '=' resolved as shift (%right '=').
    Conflict between rule 31 and token '<' resolved as shift (DIV < '<').
    Conflict between rule 31 and token '>' resolved as shift (DIV < '>').
    Conflict between rule 31 and token TK_LE resolved as shift (DIV < TK_LE).
    Conflict between rule 31 and token TK_GE resolved as shift (DIV < TK_GE).
    Conflict between rule 31 and token '+' resolved as shift (DIV < '+').
    Conflict between rule 31 and token '-' resolved as shift (DIV < '-').
    Conflict between rule 31 and token '*' resolved as shift (DIV < '*').
    Conflict between rule 31 and token '/' resolved as shift (DIV < '/').
    Conflict between rule 31 and token '%' resolved as shift (DIV < '%').


State 107

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   32     | expr MOD expr •  [KW_FOR, ')', ':', ';', ']', ',']
   33     | expr • '=' expr

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80

    $default  reduce using rule 32 (expr)

    Conflict between rule 32 and token TK_POW resolved as shift (MOD < TK_POW).
    Conflict between rule 32 and token KW_AND resolved as shift (MOD < KW_AND).
    Conflict between rule 32 and token KW_OR resolved as shift (MOD < KW_OR).
    Conflict between rule 32 and token TK_EQUALS resolved as shift (MOD < TK_EQUALS).
    Conflict between rule 32 and token TK_NOTEQUALS resolved as shift (MOD < TK_NOTEQUALS).
    Conflict between rule 32 and token INCR resolved as shift (%right INCR).
    Conflict between rule 32 and token DECR resolved as shift (%right DECR).
    Conflict between rule 32 and token MUL resolved as shift (%right MUL).
    Conflict between rule 32 and token DIV resolved as shift (%right DIV).
    Conflict between rule 32 and token MOD resolved as shift (%right MOD).
    Conflict between rule 32 and token '=' resolved as shift (%right '=').
    Conflict between rule 32 and token '<' resolved as shift (MOD < '<').
    Conflict between rule 32 and token '>' resolved as shift (MOD < '>').
    Conflict between rule 32 and token TK_LE resolved as shift (MOD < TK_LE).
    Conflict between rule 32 and token TK_GE resolved as shift (MOD < TK_GE).
    Conflict between rule 32 and token '+' resolved as shift (MOD < '+').
    Conflict between rule 32 and token '-' resolved as shift (MOD < '-').
    Conflict between rule 32 and token '*' resolved as shift (MOD < '*').
    Conflict between rule 32 and token '/' resolved as shift (MOD < '/').
    Conflict between rule 32 and token '%' resolved as shift (MOD < '%').


State 108

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr
   33     | expr '=' expr •  [KW_FOR, ')', ':', ';', ']', ',']

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80

    $default  reduce using rule 33 (expr)

    Conflict between rule 33 and token TK_POW resolved as shift ('=' < TK_POW).
    Conflict between rule 33 and token KW_AND resolved as shift ('=' < KW_AND).
    Conflict between rule 33 and token KW_OR resolved as shift ('=' < KW_OR).
    Conflict between rule 33 and token TK_EQUALS resolved as shift ('=' < TK_EQUALS).
    Conflict between rule 33 and token TK_NOTEQUALS resolved as shift ('=' < TK_NOTEQUALS).
    Conflict between rule 33 and token INCR resolved as shift (%right INCR).
    Conflict between rule 33 and token DECR resolved as shift (%right DECR).
    Conflict between rule 33 and token MUL resolved as shift (%right MUL).
    Conflict between rule 33 and token DIV resolved as shift (%right DIV).
    Conflict between rule 33 and token MOD resolved as shift (%right MOD).
    Conflict between rule 33 and token '=' resolved as shift (%right '=').
    Conflict between rule 33 and token '<' resolved as shift ('=' < '<').
    Conflict between rule 33 and token '>' resolved as shift ('=' < '>').
    Conflict between rule 33 and token TK_LE resolved as shift ('=' < TK_LE).
    Conflict between rule 33 and token TK_GE resolved as shift ('=' < TK_GE).
    Conflict between rule 33 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 33 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 33 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 33 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 33 and token '%' resolved as shift ('=' < '%').


State 109

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   19     | expr '<' expr •  [KW_FOR, KW_AND, KW_OR, TK_EQUALS, TK_NOTEQUALS, INCR, DECR, MUL, DIV, MOD, '=', '<', '>', TK_LE, TK_GE, ')', ':', ';', ']', ',']
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW  shift, and go to state 61
    '+'     shift, and go to state 76
    '-'     shift, and go to state 77
    '*'     shift, and go to state 78
    '/'     shift, and go to state 79
    '%'     shift, and go to state 80

    $default  reduce using rule 19 (expr)

    Conflict between rule 19 and token TK_POW resolved as shift ('<' < TK_POW).
    Conflict between rule 19 and token KW_AND resolved as reduce (KW_AND < '<').
    Conflict between rule 19 and token KW_OR resolved as reduce (KW_OR < '<').
    Conflict between rule 19 and token TK_EQUALS resolved as reduce (TK_EQUALS < '<').
    Conflict between rule 19 and token TK_NOTEQUALS resolved as reduce (TK_NOTEQUALS < '<').
    Conflict between rule 19 and token INCR resolved as reduce (INCR < '<').
    Conflict between rule 19 and token DECR resolved as reduce (DECR < '<').
    Conflict between rule 19 and token MUL resolved as reduce (MUL < '<').
    Conflict between rule 19 and token DIV resolved as reduce (DIV < '<').
    Conflict between rule 19 and token MOD resolved as reduce (MOD < '<').
    Conflict between rule 19 and token '=' resolved as reduce ('=' < '<').
    Conflict between rule 19 and token '<' resolved as reduce (%left '<').
    Conflict between rule 19 and token '>' resolved as reduce (%left '>').
    Conflict between rule 19 and token TK_LE resolved as reduce (%left TK_LE).
    Conflict between rule 19 and token TK_GE resolved as reduce (%left TK_GE).
    Conflict between rule 19 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 19 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 19 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 19 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 19 and token '%' resolved as shift ('<' < '%').


State 110

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   20     | expr '>' expr •  [KW_FOR, KW_AND, KW_OR, TK_EQUALS, TK_NOTEQUALS, INCR, DECR, MUL, DIV, MOD, '=', '<', '>', TK_LE, TK_GE, ')', ':', ';', ']', ',']
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW  shift, and go to state 61
    '+'     shift, and go to state 76
    '-'     shift, and go to state 77
    '*'     shift, and go to state 78
    '/'     shift, and go to state 79
    '%'     shift, and go to state 80

    $default  reduce using rule 20 (expr)

    Conflict between rule 20 and token TK_POW resolved as shift ('>' < TK_POW).
    Conflict between rule 20 and token KW_AND resolved as reduce (KW_AND < '>').
    Conflict between rule 20 and token KW_OR resolved as reduce (KW_OR < '>').
    Conflict between rule 20 and token TK_EQUALS resolved as reduce (TK_EQUALS < '>').
    Conflict between rule 20 and token TK_NOTEQUALS resolved as reduce (TK_NOTEQUALS < '>').
    Conflict between rule 20 and token INCR resolved as reduce (INCR < '>').
    Conflict between rule 20 and token DECR resolved as reduce (DECR < '>').
    Conflict between rule 20 and token MUL resolved as reduce (MUL < '>').
    Conflict between rule 20 and token DIV resolved as reduce (DIV < '>').
    Conflict between rule 20 and token MOD resolved as reduce (MOD < '>').
    Conflict between rule 20 and token '=' resolved as reduce ('=' < '>').
    Conflict between rule 20 and token '<' resolved as reduce (%left '<').
    Conflict between rule 20 and token '>' resolved as reduce (%left '>').
    Conflict between rule 20 and token TK_LE resolved as reduce (%left TK_LE).
    Conflict between rule 20 and token TK_GE resolved as reduce (%left TK_GE).
    Conflict between rule 20 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 20 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 20 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 20 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 20 and token '%' resolved as shift ('>' < '%').


State 111

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   21     | expr TK_LE expr •  [KW_FOR, KW_AND, KW_OR, TK_EQUALS, TK_NOTEQUALS, INCR, DECR, MUL, DIV, MOD, '=', '<', '>', TK_LE, TK_GE, ')', ':', ';', ']', ',']
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW  shift, and go to state 61
    '+'     shift, and go to state 76
    '-'     shift, and go to state 77
    '*'     shift, and go to state 78
    '/'     shift, and go to state 79
    '%'     shift, and go to state 80

    $default  reduce using rule 21 (expr)

    Conflict between rule 21 and token TK_POW resolved as shift (TK_LE < TK_POW).
    Conflict between rule 21 and token KW_AND resolved as reduce (KW_AND < TK_LE).
    Conflict between rule 21 and token KW_OR resolved as reduce (KW_OR < TK_LE).
    Conflict between rule 21 and token TK_EQUALS resolved as reduce (TK_EQUALS < TK_LE).
    Conflict between rule 21 and token TK_NOTEQUALS resolved as reduce (TK_NOTEQUALS < TK_LE).
    Conflict between rule 21 and token INCR resolved as reduce (INCR < TK_LE).
    Conflict between rule 21 and token DECR resolved as reduce (DECR < TK_LE).
    Conflict between rule 21 and token MUL resolved as reduce (MUL < TK_LE).
    Conflict between rule 21 and token DIV resolved as reduce (DIV < TK_LE).
    Conflict between rule 21 and token MOD resolved as reduce (MOD < TK_LE).
    Conflict between rule 21 and token '=' resolved as reduce ('=' < TK_LE).
    Conflict between rule 21 and token '<' resolved as reduce (%left '<').
    Conflict between rule 21 and token '>' resolved as reduce (%left '>').
    Conflict between rule 21 and token TK_LE resolved as reduce (%left TK_LE).
    Conflict between rule 21 and token TK_GE resolved as reduce (%left TK_GE).
    Conflict between rule 21 and token '+' resolved as shift (TK_LE < '+').
    Conflict between rule 21 and token '-' resolved as shift (TK_LE < '-').
    Conflict between rule 21 and token '*' resolved as shift (TK_LE < '*').
    Conflict between rule 21 and token '/' resolved as shift (TK_LE < '/').
    Conflict between rule 21 and token '%' resolved as shift (TK_LE < '%').


State 112

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   22     | expr TK_GE expr •  [KW_FOR, KW_AND, KW_OR, TK_EQUALS, TK_NOTEQUALS, INCR, DECR, MUL, DIV, MOD, '=', '<', '>', TK_LE, TK_GE, ')', ':', ';', ']', ',']
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW  shift, and go to state 61
    '+'     shift, and go to state 76
    '-'     shift, and go to state 77
    '*'     shift, and go to state 78
    '/'     shift, and go to state 79
    '%'     shift, and go to state 80

    $default  reduce using rule 22 (expr)

    Conflict between rule 22 and token TK_POW resolved as shift (TK_GE < TK_POW).
    Conflict between rule 22 and token KW_AND resolved as reduce (KW_AND < TK_GE).
    Conflict between rule 22 and token KW_OR resolved as reduce (KW_OR < TK_GE).
    Conflict between rule 22 and token TK_EQUALS resolved as reduce (TK_EQUALS < TK_GE).
    Conflict between rule 22 and token TK_NOTEQUALS resolved as reduce (TK_NOTEQUALS < TK_GE).
    Conflict between rule 22 and token INCR resolved as reduce (INCR < TK_GE).
    Conflict between rule 22 and token DECR resolved as reduce (DECR < TK_GE).
    Conflict between rule 22 and token MUL resolved as reduce (MUL < TK_GE).
    Conflict between rule 22 and token DIV resolved as reduce (DIV < TK_GE).
    Conflict between rule 22 and token MOD resolved as reduce (MOD < TK_GE).
    Conflict between rule 22 and token '=' resolved as reduce ('=' < TK_GE).
    Conflict between rule 22 and token '<' resolved as reduce (%left '<').
    Conflict between rule 22 and token '>' resolved as reduce (%left '>').
    Conflict between rule 22 and token TK_LE resolved as reduce (%left TK_LE).
    Conflict between rule 22 and token TK_GE resolved as reduce (%left TK_GE).
    Conflict between rule 22 and token '+' resolved as shift (TK_GE < '+').
    Conflict between rule 22 and token '-' resolved as shift (TK_GE < '-').
    Conflict between rule 22 and token '*' resolved as shift (TK_GE < '*').
    Conflict between rule 22 and token '/' resolved as shift (TK_GE < '/').
    Conflict between rule 22 and token '%' resolved as shift (TK_GE < '%').


State 113

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   13     | expr '+' expr •  [KW_FOR, KW_AND, KW_OR, TK_EQUALS, TK_NOTEQUALS, INCR, DECR, MUL, DIV, MOD, '=', '<', '>', TK_LE, TK_GE, '+', '-', ')', ':', ';', ']', ',']
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW  shift, and go to state 61
    '*'     shift, and go to state 78
    '/'     shift, and go to state 79
    '%'     shift, and go to state 80

    $default  reduce using rule 13 (expr)

    Conflict between rule 13 and token TK_POW resolved as shift ('+' < TK_POW).
    Conflict between rule 13 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 13 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 13 and token TK_EQUALS resolved as reduce (TK_EQUALS < '+').
    Conflict between rule 13 and token TK_NOTEQUALS resolved as reduce (TK_NOTEQUALS < '+').
    Conflict between rule 13 and token INCR resolved as reduce (INCR < '+').
    Conflict between rule 13 and token DECR resolved as reduce (DECR < '+').
    Conflict between rule 13 and token MUL resolved as reduce (MUL < '+').
    Conflict between rule 13 and token DIV resolved as reduce (DIV < '+').
    Conflict between rule 13 and token MOD resolved as reduce (MOD < '+').
    Conflict between rule 13 and token '=' resolved as reduce ('=' < '+').
    Conflict between rule 13 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 13 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 13 and token TK_LE resolved as reduce (TK_LE < '+').
    Conflict between rule 13 and token TK_GE resolved as reduce (TK_GE < '+').
    Conflict between rule 13 and token '+' resolved as reduce (%left '+').
    Conflict between rule 13 and token '-' resolved as reduce (%left '-').
    Conflict between rule 13 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 13 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 13 and token '%' resolved as shift ('+' < '%').


State 114

    9 expr: expr • '-' expr
    9     | expr '-' expr •  [KW_FOR, KW_AND, KW_OR, TK_EQUALS, TK_NOTEQUALS, INCR, DECR, MUL, DIV, MOD, '=', '<', '>', TK_LE, TK_GE, '+', '-', ')', ':', ';', ']', ',']
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW  shift, and go to state 61
    '*'     shift, and go to state 78
    '/'     shift, and go to state 79
    '%'     shift, and go to state 80

    $default  reduce using rule 9 (expr)

    Conflict between rule 9 and token TK_POW resolved as shift ('-' < TK_POW).
    Conflict between rule 9 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 9 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 9 and token TK_EQUALS resolved as reduce (TK_EQUALS < '-').
    Conflict between rule 9 and token TK_NOTEQUALS resolved as reduce (TK_NOTEQUALS < '-').
    Conflict between rule 9 and token INCR resolved as reduce (INCR < '-').
    Conflict between rule 9 and token DECR resolved as reduce (DECR < '-').
    Conflict between rule 9 and token MUL resolved as reduce (MUL < '-').
    Conflict between rule 9 and token DIV resolved as reduce (DIV < '-').
    Conflict between rule 9 and token MOD resolved as reduce (MOD < '-').
    Conflict between rule 9 and token '=' resolved as reduce ('=' < '-').
    Conflict between rule 9 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 9 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 9 and token TK_LE resolved as reduce (TK_LE < '-').
    Conflict between rule 9 and token TK_GE resolved as reduce (TK_GE < '-').
    Conflict between rule 9 and token '+' resolved as reduce (%left '+').
    Conflict between rule 9 and token '-' resolved as reduce (%left '-').
    Conflict between rule 9 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 9 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 9 and token '%' resolved as shift ('-' < '%').


State 115

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   10     | expr '*' expr •  [KW_FOR, KW_AND, KW_OR, TK_EQUALS, TK_NOTEQUALS, INCR, DECR, MUL, DIV, MOD, '=', '<', '>', TK_LE, TK_GE, '+', '-', '*', '/', '%', ')', ':', ';', ']', ',']
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW  shift, and go to state 61

    $default  reduce using rule 10 (expr)

    Conflict between rule 10 and token TK_POW resolved as shift ('*' < TK_POW).
    Conflict between rule 10 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 10 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 10 and token TK_EQUALS resolved as reduce (TK_EQUALS < '*').
    Conflict between rule 10 and token TK_NOTEQUALS resolved as reduce (TK_NOTEQUALS < '*').
    Conflict between rule 10 and token INCR resolved as reduce (INCR < '*').
    Conflict between rule 10 and token DECR resolved as reduce (DECR < '*').
    Conflict between rule 10 and token MUL resolved as reduce (MUL < '*').
    Conflict between rule 10 and token DIV resolved as reduce (DIV < '*').
    Conflict between rule 10 and token MOD resolved as reduce (MOD < '*').
    Conflict between rule 10 and token '=' resolved as reduce ('=' < '*').
    Conflict between rule 10 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 10 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 10 and token TK_LE resolved as reduce (TK_LE < '*').
    Conflict between rule 10 and token TK_GE resolved as reduce (TK_GE < '*').
    Conflict between rule 10 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 10 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 10 and token '*' resolved as reduce (%left '*').
    Conflict between rule 10 and token '/' resolved as reduce (%left '/').
    Conflict between rule 10 and token '%' resolved as reduce (%left '%').


State 116

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   11     | expr '/' expr •  [KW_FOR, KW_AND, KW_OR, TK_EQUALS, TK_NOTEQUALS, INCR, DECR, MUL, DIV, MOD, '=', '<', '>', TK_LE, TK_GE, '+', '-', '*', '/', '%', ')', ':', ';', ']', ',']
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW  shift, and go to state 61

    $default  reduce using rule 11 (expr)

    Conflict between rule 11 and token TK_POW resolved as shift ('/' < TK_POW).
    Conflict between rule 11 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 11 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 11 and token TK_EQUALS resolved as reduce (TK_EQUALS < '/').
    Conflict between rule 11 and token TK_NOTEQUALS resolved as reduce (TK_NOTEQUALS < '/').
    Conflict between rule 11 and token INCR resolved as reduce (INCR < '/').
    Conflict between rule 11 and token DECR resolved as reduce (DECR < '/').
    Conflict between rule 11 and token MUL resolved as reduce (MUL < '/').
    Conflict between rule 11 and token DIV resolved as reduce (DIV < '/').
    Conflict between rule 11 and token MOD resolved as reduce (MOD < '/').
    Conflict between rule 11 and token '=' resolved as reduce ('=' < '/').
    Conflict between rule 11 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 11 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 11 and token TK_LE resolved as reduce (TK_LE < '/').
    Conflict between rule 11 and token TK_GE resolved as reduce (TK_GE < '/').
    Conflict between rule 11 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 11 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 11 and token '*' resolved as reduce (%left '*').
    Conflict between rule 11 and token '/' resolved as reduce (%left '/').
    Conflict between rule 11 and token '%' resolved as reduce (%left '%').


State 117

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   12     | expr '%' expr •  [KW_FOR, KW_AND, KW_OR, TK_EQUALS, TK_NOTEQUALS, INCR, DECR, MUL, DIV, MOD, '=', '<', '>', TK_LE, TK_GE, '+', '-', '*', '/', '%', ')', ':', ';', ']', ',']
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr

    TK_POW  shift, and go to state 61

    $default  reduce using rule 12 (expr)

    Conflict between rule 12 and token TK_POW resolved as shift ('%' < TK_POW).
    Conflict between rule 12 and token KW_AND resolved as reduce (KW_AND < '%').
    Conflict between rule 12 and token KW_OR resolved as reduce (KW_OR < '%').
    Conflict between rule 12 and token TK_EQUALS resolved as reduce (TK_EQUALS < '%').
    Conflict between rule 12 and token TK_NOTEQUALS resolved as reduce (TK_NOTEQUALS < '%').
    Conflict between rule 12 and token INCR resolved as reduce (INCR < '%').
    Conflict between rule 12 and token DECR resolved as reduce (DECR < '%').
    Conflict between rule 12 and token MUL resolved as reduce (MUL < '%').
    Conflict between rule 12 and token DIV resolved as reduce (DIV < '%').
    Conflict between rule 12 and token MOD resolved as reduce (MOD < '%').
    Conflict between rule 12 and token '=' resolved as reduce ('=' < '%').
    Conflict between rule 12 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 12 and token '>' resolved as reduce ('>' < '%').
    Conflict between rule 12 and token TK_LE resolved as reduce (TK_LE < '%').
    Conflict between rule 12 and token TK_GE resolved as reduce (TK_GE < '%').
    Conflict between rule 12 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 12 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 12 and token '*' resolved as reduce (%left '*').
    Conflict between rule 12 and token '/' resolved as reduce (%left '/').
    Conflict between rule 12 and token '%' resolved as reduce (%left '%').


State 118

   52 const_dec: KW_CONST identifier_list ':' data_types ';' •

    $default  reduce using rule 52 (const_dec)


State 119

   65 data_types: • KW_INTEGER
   66           | • KW_SCALAR
   67           | • KW_STR
   68           | • KW_BOOLEAN
   70 arg_dec: TK_IDENT ':' • data_types

    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_BOOLEAN  shift, and go to state 46
    KW_STR      shift, and go to state 47

    data_types  go to state 130


State 120

   53 func_dec: KW_DEF TK_IDENT '(' arg_dec ')' • ':' func_body KW_ENDDEF ';'
   54         | KW_DEF TK_IDENT '(' arg_dec ')' • '-' '>' data_types ':' func_body KW_ENDDEF ';'

    '-'  shift, and go to state 131
    ':'  shift, and go to state 132


State 121

   71 arg_dec: arg_dec ',' • TK_IDENT ':' data_types

    TK_IDENT  shift, and go to state 133


State 122

    4 main_func: KW_DEF KW_MAIN '(' ')' ':' • func_body KW_ENDDEF ';'
   41 command: • assign
   42        | • if_block
   43        | • for_block
   44        | • return_block
   45        | • while_block
   46        | • KW_BREAK ';'
   47        | • KW_CONTINUE ';'
   48        | • lib_funcs ';'
   49        | • func_call ';'
   50        | • array_init
   51 var_dec: • identifier_list ':' data_types ';'
   52 const_dec: • KW_CONST identifier_list ':' data_types ';'
   55 func_body: • command
   56          | • var_dec func_body
   57          | • const_dec func_body
   58          | • command func_body
   59 identifier_list: • TK_IDENT
   60                | • identifier_list ',' TK_IDENT
   61                | • TK_IDENT '[' TK_INT ']'
   62                | • TK_IDENT '[' ']'
   63                | • TK_IDENT '=' expr
   64                | • identifier_list ',' TK_IDENT '=' expr
   72 func_call: • TK_IDENT '(' func_args ')'
   76 assign: • TK_IDENT '=' expr ';'
   77 if_block: • KW_IF '(' expr ')' ':' commandList KW_ENDIF ';'
   78         | • KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'
   79 for_block: • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   81 return_block: • KW_RETURN ';'
   82             | • KW_RETURN expr ';'
   83 while_block: • KW_WHILE '(' expr ')' ':' commandList KW_ENDWHILE ';'
   84 array_init: • TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 134
    KW_CONST      shift, and go to state 5
    KW_FOR        shift, and go to state 135
    KW_WHILE      shift, and go to state 136
    KW_BREAK      shift, and go to state 137
    KW_CONTINUE   shift, and go to state 138
    KW_RETURN     shift, and go to state 139
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_IF         shift, and go to state 140

    command          go to state 141
    var_dec          go to state 142
    const_dec        go to state 143
    func_body        go to state 144
    identifier_list  go to state 12
    func_call        go to state 145
    assign           go to state 146
    if_block         go to state 147
    for_block        go to state 148
    return_block     go to state 149
    while_block      go to state 150
    array_init       go to state 151
    lib_funcs        go to state 152


State 123

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr
   64 identifier_list: identifier_list ',' TK_IDENT '=' expr •  [':', ',']

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80

    $default  reduce using rule 64 (identifier_list)


State 124

   72 func_call: TK_IDENT '(' func_args ')' •

    $default  reduce using rule 72 (func_call)


State 125

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   75 func_args: func_args ',' • expr
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 153
    func_call  go to state 37
    lib_funcs  go to state 38


State 126

   15 expr: TK_IDENT '[' expr ']' •

    $default  reduce using rule 15 (expr)


State 127

   85 lib_funcs: KW_WRITESTR '(' func_args ')' •

    $default  reduce using rule 85 (lib_funcs)


State 128

   86 lib_funcs: KW_WRITEINT '(' func_args ')' •

    $default  reduce using rule 86 (lib_funcs)


State 129

   87 lib_funcs: KW_WRITESCAL '(' func_args ')' •

    $default  reduce using rule 87 (lib_funcs)


State 130

   70 arg_dec: TK_IDENT ':' data_types •

    $default  reduce using rule 70 (arg_dec)


State 131

   54 func_dec: KW_DEF TK_IDENT '(' arg_dec ')' '-' • '>' data_types ':' func_body KW_ENDDEF ';'

    '>'  shift, and go to state 154


State 132

   41 command: • assign
   42        | • if_block
   43        | • for_block
   44        | • return_block
   45        | • while_block
   46        | • KW_BREAK ';'
   47        | • KW_CONTINUE ';'
   48        | • lib_funcs ';'
   49        | • func_call ';'
   50        | • array_init
   51 var_dec: • identifier_list ':' data_types ';'
   52 const_dec: • KW_CONST identifier_list ':' data_types ';'
   53 func_dec: KW_DEF TK_IDENT '(' arg_dec ')' ':' • func_body KW_ENDDEF ';'
   55 func_body: • command
   56          | • var_dec func_body
   57          | • const_dec func_body
   58          | • command func_body
   59 identifier_list: • TK_IDENT
   60                | • identifier_list ',' TK_IDENT
   61                | • TK_IDENT '[' TK_INT ']'
   62                | • TK_IDENT '[' ']'
   63                | • TK_IDENT '=' expr
   64                | • identifier_list ',' TK_IDENT '=' expr
   72 func_call: • TK_IDENT '(' func_args ')'
   76 assign: • TK_IDENT '=' expr ';'
   77 if_block: • KW_IF '(' expr ')' ':' commandList KW_ENDIF ';'
   78         | • KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'
   79 for_block: • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   81 return_block: • KW_RETURN ';'
   82             | • KW_RETURN expr ';'
   83 while_block: • KW_WHILE '(' expr ')' ':' commandList KW_ENDWHILE ';'
   84 array_init: • TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 134
    KW_CONST      shift, and go to state 5
    KW_FOR        shift, and go to state 135
    KW_WHILE      shift, and go to state 136
    KW_BREAK      shift, and go to state 137
    KW_CONTINUE   shift, and go to state 138
    KW_RETURN     shift, and go to state 139
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_IF         shift, and go to state 140

    command          go to state 141
    var_dec          go to state 142
    const_dec        go to state 143
    func_body        go to state 155
    identifier_list  go to state 12
    func_call        go to state 145
    assign           go to state 146
    if_block         go to state 147
    for_block        go to state 148
    return_block     go to state 149
    while_block      go to state 150
    array_init       go to state 151
    lib_funcs        go to state 152


State 133

   71 arg_dec: arg_dec ',' TK_IDENT • ':' data_types

    ':'  shift, and go to state 156


State 134

   59 identifier_list: TK_IDENT •  [':', ',']
   61                | TK_IDENT • '[' TK_INT ']'
   62                | TK_IDENT • '[' ']'
   63                | TK_IDENT • '=' expr
   72 func_call: TK_IDENT • '(' func_args ')'
   76 assign: TK_IDENT • '=' expr ';'
   84 array_init: TK_IDENT • TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'

    TK_ASSGN  shift, and go to state 157
    '='       shift, and go to state 158
    '('       shift, and go to state 50
    '['       shift, and go to state 14

    $default  reduce using rule 59 (identifier_list)


State 135

   79 for_block: KW_FOR • TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | KW_FOR • TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'

    TK_IDENT  shift, and go to state 159


State 136

   83 while_block: KW_WHILE • '(' expr ')' ':' commandList KW_ENDWHILE ';'

    '('  shift, and go to state 160


State 137

   46 command: KW_BREAK • ';'

    ';'  shift, and go to state 161


State 138

   47 command: KW_CONTINUE • ';'

    ';'  shift, and go to state 162


State 139

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   81 return_block: KW_RETURN • ';'
   82             | KW_RETURN • expr ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35
    ';'           shift, and go to state 163

    expr       go to state 164
    func_call  go to state 37
    lib_funcs  go to state 38


State 140

   77 if_block: KW_IF • '(' expr ')' ':' commandList KW_ENDIF ';'
   78         | KW_IF • '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'

    '('  shift, and go to state 165


State 141

   41 command: • assign
   42        | • if_block
   43        | • for_block
   44        | • return_block
   45        | • while_block
   46        | • KW_BREAK ';'
   47        | • KW_CONTINUE ';'
   48        | • lib_funcs ';'
   49        | • func_call ';'
   50        | • array_init
   51 var_dec: • identifier_list ':' data_types ';'
   52 const_dec: • KW_CONST identifier_list ':' data_types ';'
   55 func_body: • command
   55          | command •  [KW_ENDDEF]
   56          | • var_dec func_body
   57          | • const_dec func_body
   58          | • command func_body
   58          | command • func_body
   59 identifier_list: • TK_IDENT
   60                | • identifier_list ',' TK_IDENT
   61                | • TK_IDENT '[' TK_INT ']'
   62                | • TK_IDENT '[' ']'
   63                | • TK_IDENT '=' expr
   64                | • identifier_list ',' TK_IDENT '=' expr
   72 func_call: • TK_IDENT '(' func_args ')'
   76 assign: • TK_IDENT '=' expr ';'
   77 if_block: • KW_IF '(' expr ')' ':' commandList KW_ENDIF ';'
   78         | • KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'
   79 for_block: • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   81 return_block: • KW_RETURN ';'
   82             | • KW_RETURN expr ';'
   83 while_block: • KW_WHILE '(' expr ')' ':' commandList KW_ENDWHILE ';'
   84 array_init: • TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 134
    KW_CONST      shift, and go to state 5
    KW_FOR        shift, and go to state 135
    KW_WHILE      shift, and go to state 136
    KW_BREAK      shift, and go to state 137
    KW_CONTINUE   shift, and go to state 138
    KW_RETURN     shift, and go to state 139
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_IF         shift, and go to state 140

    $default  reduce using rule 55 (func_body)

    command          go to state 141
    var_dec          go to state 142
    const_dec        go to state 143
    func_body        go to state 166
    identifier_list  go to state 12
    func_call        go to state 145
    assign           go to state 146
    if_block         go to state 147
    for_block        go to state 148
    return_block     go to state 149
    while_block      go to state 150
    array_init       go to state 151
    lib_funcs        go to state 152


State 142

   41 command: • assign
   42        | • if_block
   43        | • for_block
   44        | • return_block
   45        | • while_block
   46        | • KW_BREAK ';'
   47        | • KW_CONTINUE ';'
   48        | • lib_funcs ';'
   49        | • func_call ';'
   50        | • array_init
   51 var_dec: • identifier_list ':' data_types ';'
   52 const_dec: • KW_CONST identifier_list ':' data_types ';'
   55 func_body: • command
   56          | • var_dec func_body
   56          | var_dec • func_body
   57          | • const_dec func_body
   58          | • command func_body
   59 identifier_list: • TK_IDENT
   60                | • identifier_list ',' TK_IDENT
   61                | • TK_IDENT '[' TK_INT ']'
   62                | • TK_IDENT '[' ']'
   63                | • TK_IDENT '=' expr
   64                | • identifier_list ',' TK_IDENT '=' expr
   72 func_call: • TK_IDENT '(' func_args ')'
   76 assign: • TK_IDENT '=' expr ';'
   77 if_block: • KW_IF '(' expr ')' ':' commandList KW_ENDIF ';'
   78         | • KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'
   79 for_block: • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   81 return_block: • KW_RETURN ';'
   82             | • KW_RETURN expr ';'
   83 while_block: • KW_WHILE '(' expr ')' ':' commandList KW_ENDWHILE ';'
   84 array_init: • TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 134
    KW_CONST      shift, and go to state 5
    KW_FOR        shift, and go to state 135
    KW_WHILE      shift, and go to state 136
    KW_BREAK      shift, and go to state 137
    KW_CONTINUE   shift, and go to state 138
    KW_RETURN     shift, and go to state 139
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_IF         shift, and go to state 140

    command          go to state 141
    var_dec          go to state 142
    const_dec        go to state 143
    func_body        go to state 167
    identifier_list  go to state 12
    func_call        go to state 145
    assign           go to state 146
    if_block         go to state 147
    for_block        go to state 148
    return_block     go to state 149
    while_block      go to state 150
    array_init       go to state 151
    lib_funcs        go to state 152


State 143

   41 command: • assign
   42        | • if_block
   43        | • for_block
   44        | • return_block
   45        | • while_block
   46        | • KW_BREAK ';'
   47        | • KW_CONTINUE ';'
   48        | • lib_funcs ';'
   49        | • func_call ';'
   50        | • array_init
   51 var_dec: • identifier_list ':' data_types ';'
   52 const_dec: • KW_CONST identifier_list ':' data_types ';'
   55 func_body: • command
   56          | • var_dec func_body
   57          | • const_dec func_body
   57          | const_dec • func_body
   58          | • command func_body
   59 identifier_list: • TK_IDENT
   60                | • identifier_list ',' TK_IDENT
   61                | • TK_IDENT '[' TK_INT ']'
   62                | • TK_IDENT '[' ']'
   63                | • TK_IDENT '=' expr
   64                | • identifier_list ',' TK_IDENT '=' expr
   72 func_call: • TK_IDENT '(' func_args ')'
   76 assign: • TK_IDENT '=' expr ';'
   77 if_block: • KW_IF '(' expr ')' ':' commandList KW_ENDIF ';'
   78         | • KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'
   79 for_block: • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   81 return_block: • KW_RETURN ';'
   82             | • KW_RETURN expr ';'
   83 while_block: • KW_WHILE '(' expr ')' ':' commandList KW_ENDWHILE ';'
   84 array_init: • TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 134
    KW_CONST      shift, and go to state 5
    KW_FOR        shift, and go to state 135
    KW_WHILE      shift, and go to state 136
    KW_BREAK      shift, and go to state 137
    KW_CONTINUE   shift, and go to state 138
    KW_RETURN     shift, and go to state 139
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_IF         shift, and go to state 140

    command          go to state 141
    var_dec          go to state 142
    const_dec        go to state 143
    func_body        go to state 168
    identifier_list  go to state 12
    func_call        go to state 145
    assign           go to state 146
    if_block         go to state 147
    for_block        go to state 148
    return_block     go to state 149
    while_block      go to state 150
    array_init       go to state 151
    lib_funcs        go to state 152


State 144

    4 main_func: KW_DEF KW_MAIN '(' ')' ':' func_body • KW_ENDDEF ';'

    KW_ENDDEF  shift, and go to state 169


State 145

   49 command: func_call • ';'

    ';'  shift, and go to state 170


State 146

   41 command: assign •

    $default  reduce using rule 41 (command)


State 147

   42 command: if_block •

    $default  reduce using rule 42 (command)


State 148

   43 command: for_block •

    $default  reduce using rule 43 (command)


State 149

   44 command: return_block •

    $default  reduce using rule 44 (command)


State 150

   45 command: while_block •

    $default  reduce using rule 45 (command)


State 151

   50 command: array_init •

    $default  reduce using rule 50 (command)


State 152

   48 command: lib_funcs • ';'

    ';'  shift, and go to state 171


State 153

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr
   75 func_args: func_args ',' expr •  [')', ',']

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80

    $default  reduce using rule 75 (func_args)


State 154

   54 func_dec: KW_DEF TK_IDENT '(' arg_dec ')' '-' '>' • data_types ':' func_body KW_ENDDEF ';'
   65 data_types: • KW_INTEGER
   66           | • KW_SCALAR
   67           | • KW_STR
   68           | • KW_BOOLEAN

    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_BOOLEAN  shift, and go to state 46
    KW_STR      shift, and go to state 47

    data_types  go to state 172


State 155

   53 func_dec: KW_DEF TK_IDENT '(' arg_dec ')' ':' func_body • KW_ENDDEF ';'

    KW_ENDDEF  shift, and go to state 173


State 156

   65 data_types: • KW_INTEGER
   66           | • KW_SCALAR
   67           | • KW_STR
   68           | • KW_BOOLEAN
   71 arg_dec: arg_dec ',' TK_IDENT ':' • data_types

    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_BOOLEAN  shift, and go to state 46
    KW_STR      shift, and go to state 47

    data_types  go to state 174


State 157

   84 array_init: TK_IDENT TK_ASSGN • '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'

    '['  shift, and go to state 175


State 158

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   63 identifier_list: TK_IDENT '=' • expr
   72 func_call: • TK_IDENT '(' func_args ')'
   76 assign: TK_IDENT '=' • expr ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 176
    func_call  go to state 37
    lib_funcs  go to state 38


State 159

   79 for_block: KW_FOR TK_IDENT • KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | KW_FOR TK_IDENT • KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'

    KW_IN  shift, and go to state 177


State 160

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   83 while_block: KW_WHILE '(' • expr ')' ':' commandList KW_ENDWHILE ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 178
    func_call  go to state 37
    lib_funcs  go to state 38


State 161

   46 command: KW_BREAK ';' •

    $default  reduce using rule 46 (command)


State 162

   47 command: KW_CONTINUE ';' •

    $default  reduce using rule 47 (command)


State 163

   81 return_block: KW_RETURN ';' •

    $default  reduce using rule 81 (return_block)


State 164

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr
   82 return_block: KW_RETURN expr • ';'

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80
    ';'           shift, and go to state 179


State 165

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   77 if_block: KW_IF '(' • expr ')' ':' commandList KW_ENDIF ';'
   78         | KW_IF '(' • expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 180
    func_call  go to state 37
    lib_funcs  go to state 38


State 166

   58 func_body: command func_body •

    $default  reduce using rule 58 (func_body)


State 167

   56 func_body: var_dec func_body •

    $default  reduce using rule 56 (func_body)


State 168

   57 func_body: const_dec func_body •

    $default  reduce using rule 57 (func_body)


State 169

    4 main_func: KW_DEF KW_MAIN '(' ')' ':' func_body KW_ENDDEF • ';'

    ';'  shift, and go to state 181


State 170

   49 command: func_call ';' •

    $default  reduce using rule 49 (command)


State 171

   48 command: lib_funcs ';' •

    $default  reduce using rule 48 (command)


State 172

   54 func_dec: KW_DEF TK_IDENT '(' arg_dec ')' '-' '>' data_types • ':' func_body KW_ENDDEF ';'

    ':'  shift, and go to state 182


State 173

   53 func_dec: KW_DEF TK_IDENT '(' arg_dec ')' ':' func_body KW_ENDDEF • ';'

    ';'  shift, and go to state 183


State 174

   71 arg_dec: arg_dec ',' TK_IDENT ':' data_types •

    $default  reduce using rule 71 (arg_dec)


State 175

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   84 array_init: TK_IDENT TK_ASSGN '[' • expr KW_FOR expr ':' expr ']' ':' data_types ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 184
    func_call  go to state 37
    lib_funcs  go to state 38


State 176

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr
   63 identifier_list: TK_IDENT '=' expr •  [':', ',']
   76 assign: TK_IDENT '=' expr • ';'

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80
    ';'           shift, and go to state 185

    $default  reduce using rule 63 (identifier_list)


State 177

   79 for_block: KW_FOR TK_IDENT KW_IN • '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | KW_FOR TK_IDENT KW_IN • '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'

    '['  shift, and go to state 186


State 178

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr
   83 while_block: KW_WHILE '(' expr • ')' ':' commandList KW_ENDWHILE ';'

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80
    ')'           shift, and go to state 187


State 179

   82 return_block: KW_RETURN expr ';' •

    $default  reduce using rule 82 (return_block)


State 180

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr
   77 if_block: KW_IF '(' expr • ')' ':' commandList KW_ENDIF ';'
   78         | KW_IF '(' expr • ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80
    ')'           shift, and go to state 188


State 181

    4 main_func: KW_DEF KW_MAIN '(' ')' ':' func_body KW_ENDDEF ';' •

    $default  reduce using rule 4 (main_func)


State 182

   41 command: • assign
   42        | • if_block
   43        | • for_block
   44        | • return_block
   45        | • while_block
   46        | • KW_BREAK ';'
   47        | • KW_CONTINUE ';'
   48        | • lib_funcs ';'
   49        | • func_call ';'
   50        | • array_init
   51 var_dec: • identifier_list ':' data_types ';'
   52 const_dec: • KW_CONST identifier_list ':' data_types ';'
   54 func_dec: KW_DEF TK_IDENT '(' arg_dec ')' '-' '>' data_types ':' • func_body KW_ENDDEF ';'
   55 func_body: • command
   56          | • var_dec func_body
   57          | • const_dec func_body
   58          | • command func_body
   59 identifier_list: • TK_IDENT
   60                | • identifier_list ',' TK_IDENT
   61                | • TK_IDENT '[' TK_INT ']'
   62                | • TK_IDENT '[' ']'
   63                | • TK_IDENT '=' expr
   64                | • identifier_list ',' TK_IDENT '=' expr
   72 func_call: • TK_IDENT '(' func_args ')'
   76 assign: • TK_IDENT '=' expr ';'
   77 if_block: • KW_IF '(' expr ')' ':' commandList KW_ENDIF ';'
   78         | • KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'
   79 for_block: • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   81 return_block: • KW_RETURN ';'
   82             | • KW_RETURN expr ';'
   83 while_block: • KW_WHILE '(' expr ')' ':' commandList KW_ENDWHILE ';'
   84 array_init: • TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 134
    KW_CONST      shift, and go to state 5
    KW_FOR        shift, and go to state 135
    KW_WHILE      shift, and go to state 136
    KW_BREAK      shift, and go to state 137
    KW_CONTINUE   shift, and go to state 138
    KW_RETURN     shift, and go to state 139
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_IF         shift, and go to state 140

    command          go to state 141
    var_dec          go to state 142
    const_dec        go to state 143
    func_body        go to state 189
    identifier_list  go to state 12
    func_call        go to state 145
    assign           go to state 146
    if_block         go to state 147
    for_block        go to state 148
    return_block     go to state 149
    while_block      go to state 150
    array_init       go to state 151
    lib_funcs        go to state 152


State 183

   53 func_dec: KW_DEF TK_IDENT '(' arg_dec ')' ':' func_body KW_ENDDEF ';' •

    $default  reduce using rule 53 (func_dec)


State 184

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr
   84 array_init: TK_IDENT TK_ASSGN '[' expr • KW_FOR expr ':' expr ']' ':' data_types ';'

    KW_FOR        shift, and go to state 190
    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80


State 185

   76 assign: TK_IDENT '=' expr ';' •

    $default  reduce using rule 76 (assign)


State 186

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   79 for_block: KW_FOR TK_IDENT KW_IN '[' • expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | KW_FOR TK_IDENT KW_IN '[' • expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 191
    func_call  go to state 37
    lib_funcs  go to state 38


State 187

   83 while_block: KW_WHILE '(' expr ')' • ':' commandList KW_ENDWHILE ';'

    ':'  shift, and go to state 192


State 188

   77 if_block: KW_IF '(' expr ')' • ':' commandList KW_ENDIF ';'
   78         | KW_IF '(' expr ')' • ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'

    ':'  shift, and go to state 193


State 189

   54 func_dec: KW_DEF TK_IDENT '(' arg_dec ')' '-' '>' data_types ':' func_body • KW_ENDDEF ';'

    KW_ENDDEF  shift, and go to state 194


State 190

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   84 array_init: TK_IDENT TK_ASSGN '[' expr KW_FOR • expr ':' expr ']' ':' data_types ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 195
    func_call  go to state 37
    lib_funcs  go to state 38


State 191

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr
   79 for_block: KW_FOR TK_IDENT KW_IN '[' expr • ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | KW_FOR TK_IDENT KW_IN '[' expr • ':' expr ']' ':' commandList KW_ENDFOR ';'

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80
    ':'           shift, and go to state 196


State 192

   39 commandList: • command
   40            | • commandList command
   41 command: • assign
   42        | • if_block
   43        | • for_block
   44        | • return_block
   45        | • while_block
   46        | • KW_BREAK ';'
   47        | • KW_CONTINUE ';'
   48        | • lib_funcs ';'
   49        | • func_call ';'
   50        | • array_init
   72 func_call: • TK_IDENT '(' func_args ')'
   76 assign: • TK_IDENT '=' expr ';'
   77 if_block: • KW_IF '(' expr ')' ':' commandList KW_ENDIF ';'
   78         | • KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'
   79 for_block: • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   81 return_block: • KW_RETURN ';'
   82             | • KW_RETURN expr ';'
   83 while_block: • KW_WHILE '(' expr ')' ':' commandList KW_ENDWHILE ';'
   83            | KW_WHILE '(' expr ')' ':' • commandList KW_ENDWHILE ';'
   84 array_init: • TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 197
    KW_FOR        shift, and go to state 135
    KW_WHILE      shift, and go to state 136
    KW_BREAK      shift, and go to state 137
    KW_CONTINUE   shift, and go to state 138
    KW_RETURN     shift, and go to state 139
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_IF         shift, and go to state 140

    commandList   go to state 198
    command       go to state 199
    func_call     go to state 145
    assign        go to state 146
    if_block      go to state 147
    for_block     go to state 148
    return_block  go to state 149
    while_block   go to state 150
    array_init    go to state 151
    lib_funcs     go to state 152


State 193

   39 commandList: • command
   40            | • commandList command
   41 command: • assign
   42        | • if_block
   43        | • for_block
   44        | • return_block
   45        | • while_block
   46        | • KW_BREAK ';'
   47        | • KW_CONTINUE ';'
   48        | • lib_funcs ';'
   49        | • func_call ';'
   50        | • array_init
   72 func_call: • TK_IDENT '(' func_args ')'
   76 assign: • TK_IDENT '=' expr ';'
   77 if_block: • KW_IF '(' expr ')' ':' commandList KW_ENDIF ';'
   77         | KW_IF '(' expr ')' ':' • commandList KW_ENDIF ';'
   78         | • KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'
   78         | KW_IF '(' expr ')' ':' • commandList KW_ELSE ':' commandList KW_ENDIF ';'
   79 for_block: • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   81 return_block: • KW_RETURN ';'
   82             | • KW_RETURN expr ';'
   83 while_block: • KW_WHILE '(' expr ')' ':' commandList KW_ENDWHILE ';'
   84 array_init: • TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 197
    KW_FOR        shift, and go to state 135
    KW_WHILE      shift, and go to state 136
    KW_BREAK      shift, and go to state 137
    KW_CONTINUE   shift, and go to state 138
    KW_RETURN     shift, and go to state 139
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_IF         shift, and go to state 140

    commandList   go to state 200
    command       go to state 199
    func_call     go to state 145
    assign        go to state 146
    if_block      go to state 147
    for_block     go to state 148
    return_block  go to state 149
    while_block   go to state 150
    array_init    go to state 151
    lib_funcs     go to state 152


State 194

   54 func_dec: KW_DEF TK_IDENT '(' arg_dec ')' '-' '>' data_types ':' func_body KW_ENDDEF • ';'

    ';'  shift, and go to state 201


State 195

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr
   84 array_init: TK_IDENT TK_ASSGN '[' expr KW_FOR expr • ':' expr ']' ':' data_types ';'

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80
    ':'           shift, and go to state 202


State 196

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   79 for_block: KW_FOR TK_IDENT KW_IN '[' expr ':' • expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | KW_FOR TK_IDENT KW_IN '[' expr ':' • expr ']' ':' commandList KW_ENDFOR ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 203
    func_call  go to state 37
    lib_funcs  go to state 38


State 197

   72 func_call: TK_IDENT • '(' func_args ')'
   76 assign: TK_IDENT • '=' expr ';'
   84 array_init: TK_IDENT • TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'

    TK_ASSGN  shift, and go to state 157
    '='       shift, and go to state 204
    '('       shift, and go to state 50


State 198

   40 commandList: commandList • command
   41 command: • assign
   42        | • if_block
   43        | • for_block
   44        | • return_block
   45        | • while_block
   46        | • KW_BREAK ';'
   47        | • KW_CONTINUE ';'
   48        | • lib_funcs ';'
   49        | • func_call ';'
   50        | • array_init
   72 func_call: • TK_IDENT '(' func_args ')'
   76 assign: • TK_IDENT '=' expr ';'
   77 if_block: • KW_IF '(' expr ')' ':' commandList KW_ENDIF ';'
   78         | • KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'
   79 for_block: • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   81 return_block: • KW_RETURN ';'
   82             | • KW_RETURN expr ';'
   83 while_block: • KW_WHILE '(' expr ')' ':' commandList KW_ENDWHILE ';'
   83            | KW_WHILE '(' expr ')' ':' commandList • KW_ENDWHILE ';'
   84 array_init: • TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 197
    KW_FOR        shift, and go to state 135
    KW_WHILE      shift, and go to state 136
    KW_ENDWHILE   shift, and go to state 205
    KW_BREAK      shift, and go to state 137
    KW_CONTINUE   shift, and go to state 138
    KW_RETURN     shift, and go to state 139
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_IF         shift, and go to state 140

    command       go to state 206
    func_call     go to state 145
    assign        go to state 146
    if_block      go to state 147
    for_block     go to state 148
    return_block  go to state 149
    while_block   go to state 150
    array_init    go to state 151
    lib_funcs     go to state 152


State 199

   39 commandList: command •

    $default  reduce using rule 39 (commandList)


State 200

   40 commandList: commandList • command
   41 command: • assign
   42        | • if_block
   43        | • for_block
   44        | • return_block
   45        | • while_block
   46        | • KW_BREAK ';'
   47        | • KW_CONTINUE ';'
   48        | • lib_funcs ';'
   49        | • func_call ';'
   50        | • array_init
   72 func_call: • TK_IDENT '(' func_args ')'
   76 assign: • TK_IDENT '=' expr ';'
   77 if_block: • KW_IF '(' expr ')' ':' commandList KW_ENDIF ';'
   77         | KW_IF '(' expr ')' ':' commandList • KW_ENDIF ';'
   78         | • KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'
   78         | KW_IF '(' expr ')' ':' commandList • KW_ELSE ':' commandList KW_ENDIF ';'
   79 for_block: • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   81 return_block: • KW_RETURN ';'
   82             | • KW_RETURN expr ';'
   83 while_block: • KW_WHILE '(' expr ')' ':' commandList KW_ENDWHILE ';'
   84 array_init: • TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 197
    KW_ENDIF      shift, and go to state 207
    KW_FOR        shift, and go to state 135
    KW_WHILE      shift, and go to state 136
    KW_BREAK      shift, and go to state 137
    KW_CONTINUE   shift, and go to state 138
    KW_RETURN     shift, and go to state 139
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_IF         shift, and go to state 140
    KW_ELSE       shift, and go to state 208

    command       go to state 206
    func_call     go to state 145
    assign        go to state 146
    if_block      go to state 147
    for_block     go to state 148
    return_block  go to state 149
    while_block   go to state 150
    array_init    go to state 151
    lib_funcs     go to state 152


State 201

   54 func_dec: KW_DEF TK_IDENT '(' arg_dec ')' '-' '>' data_types ':' func_body KW_ENDDEF ';' •

    $default  reduce using rule 54 (func_dec)


State 202

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   84 array_init: TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' • expr ']' ':' data_types ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 209
    func_call  go to state 37
    lib_funcs  go to state 38


State 203

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr
   79 for_block: KW_FOR TK_IDENT KW_IN '[' expr ':' expr • ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | KW_FOR TK_IDENT KW_IN '[' expr ':' expr • ']' ':' commandList KW_ENDFOR ';'

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80
    ':'           shift, and go to state 210
    ']'           shift, and go to state 211


State 204

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   76 assign: TK_IDENT '=' • expr ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 212
    func_call  go to state 37
    lib_funcs  go to state 38


State 205

   83 while_block: KW_WHILE '(' expr ')' ':' commandList KW_ENDWHILE • ';'

    ';'  shift, and go to state 213


State 206

   40 commandList: commandList command •

    $default  reduce using rule 40 (commandList)


State 207

   77 if_block: KW_IF '(' expr ')' ':' commandList KW_ENDIF • ';'

    ';'  shift, and go to state 214


State 208

   78 if_block: KW_IF '(' expr ')' ':' commandList KW_ELSE • ':' commandList KW_ENDIF ';'

    ':'  shift, and go to state 215


State 209

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr
   84 array_init: TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr • ']' ':' data_types ';'

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80
    ']'           shift, and go to state 216


State 210

    9 expr: • expr '-' expr
   10     | • expr '*' expr
   11     | • expr '/' expr
   12     | • expr '%' expr
   13     | • expr '+' expr
   14     | • expr TK_POW expr
   15     | • TK_IDENT '[' expr ']'
   16     | • '(' expr ')'
   17     | • func_call
   18     | • lib_funcs
   19     | • expr '<' expr
   20     | • expr '>' expr
   21     | • expr TK_LE expr
   22     | • expr TK_GE expr
   23     | • expr TK_EQUALS expr
   24     | • expr TK_NOTEQUALS expr
   25     | • KW_NOT expr
   26     | • expr KW_AND expr
   27     | • expr KW_OR expr
   28     | • expr INCR expr
   29     | • expr DECR expr
   30     | • expr MUL expr
   31     | • expr DIV expr
   32     | • expr MOD expr
   33     | • expr '=' expr
   34     | • '-' expr
   35     | • TK_INT
   36     | • TK_REAL
   37     | • TK_STRING
   38     | • TK_IDENT
   72 func_call: • TK_IDENT '(' func_args ')'
   79 for_block: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' • expr ']' ':' commandList KW_ENDFOR ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 23
    TK_INT        shift, and go to state 24
    TK_STRING     shift, and go to state 25
    TK_REAL       shift, and go to state 26
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_NOT        shift, and go to state 33
    '-'           shift, and go to state 34
    '('           shift, and go to state 35

    expr       go to state 217
    func_call  go to state 37
    lib_funcs  go to state 38


State 211

   80 for_block: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' • ':' commandList KW_ENDFOR ';'

    ':'  shift, and go to state 218


State 212

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr
   76 assign: TK_IDENT '=' expr • ';'

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80
    ';'           shift, and go to state 185


State 213

   83 while_block: KW_WHILE '(' expr ')' ':' commandList KW_ENDWHILE ';' •

    $default  reduce using rule 83 (while_block)


State 214

   77 if_block: KW_IF '(' expr ')' ':' commandList KW_ENDIF ';' •

    $default  reduce using rule 77 (if_block)


State 215

   39 commandList: • command
   40            | • commandList command
   41 command: • assign
   42        | • if_block
   43        | • for_block
   44        | • return_block
   45        | • while_block
   46        | • KW_BREAK ';'
   47        | • KW_CONTINUE ';'
   48        | • lib_funcs ';'
   49        | • func_call ';'
   50        | • array_init
   72 func_call: • TK_IDENT '(' func_args ')'
   76 assign: • TK_IDENT '=' expr ';'
   77 if_block: • KW_IF '(' expr ')' ':' commandList KW_ENDIF ';'
   78         | • KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'
   78         | KW_IF '(' expr ')' ':' commandList KW_ELSE ':' • commandList KW_ENDIF ';'
   79 for_block: • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   81 return_block: • KW_RETURN ';'
   82             | • KW_RETURN expr ';'
   83 while_block: • KW_WHILE '(' expr ')' ':' commandList KW_ENDWHILE ';'
   84 array_init: • TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 197
    KW_FOR        shift, and go to state 135
    KW_WHILE      shift, and go to state 136
    KW_BREAK      shift, and go to state 137
    KW_CONTINUE   shift, and go to state 138
    KW_RETURN     shift, and go to state 139
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_IF         shift, and go to state 140

    commandList   go to state 219
    command       go to state 199
    func_call     go to state 145
    assign        go to state 146
    if_block      go to state 147
    for_block     go to state 148
    return_block  go to state 149
    while_block   go to state 150
    array_init    go to state 151
    lib_funcs     go to state 152


State 216

   84 array_init: TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' • ':' data_types ';'

    ':'  shift, and go to state 220


State 217

    9 expr: expr • '-' expr
   10     | expr • '*' expr
   11     | expr • '/' expr
   12     | expr • '%' expr
   13     | expr • '+' expr
   14     | expr • TK_POW expr
   19     | expr • '<' expr
   20     | expr • '>' expr
   21     | expr • TK_LE expr
   22     | expr • TK_GE expr
   23     | expr • TK_EQUALS expr
   24     | expr • TK_NOTEQUALS expr
   26     | expr • KW_AND expr
   27     | expr • KW_OR expr
   28     | expr • INCR expr
   29     | expr • DECR expr
   30     | expr • MUL expr
   31     | expr • DIV expr
   32     | expr • MOD expr
   33     | expr • '=' expr
   79 for_block: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr • ']' ':' commandList KW_ENDFOR ';'

    TK_POW        shift, and go to state 61
    KW_AND        shift, and go to state 62
    KW_OR         shift, and go to state 63
    TK_EQUALS     shift, and go to state 64
    TK_NOTEQUALS  shift, and go to state 65
    INCR          shift, and go to state 66
    DECR          shift, and go to state 67
    MUL           shift, and go to state 68
    DIV           shift, and go to state 69
    MOD           shift, and go to state 70
    '='           shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    TK_LE         shift, and go to state 74
    TK_GE         shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '%'           shift, and go to state 80
    ']'           shift, and go to state 221


State 218

   39 commandList: • command
   40            | • commandList command
   41 command: • assign
   42        | • if_block
   43        | • for_block
   44        | • return_block
   45        | • while_block
   46        | • KW_BREAK ';'
   47        | • KW_CONTINUE ';'
   48        | • lib_funcs ';'
   49        | • func_call ';'
   50        | • array_init
   72 func_call: • TK_IDENT '(' func_args ')'
   76 assign: • TK_IDENT '=' expr ';'
   77 if_block: • KW_IF '(' expr ')' ':' commandList KW_ENDIF ';'
   78         | • KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'
   79 for_block: • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' • commandList KW_ENDFOR ';'
   81 return_block: • KW_RETURN ';'
   82             | • KW_RETURN expr ';'
   83 while_block: • KW_WHILE '(' expr ')' ':' commandList KW_ENDWHILE ';'
   84 array_init: • TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 197
    KW_FOR        shift, and go to state 135
    KW_WHILE      shift, and go to state 136
    KW_BREAK      shift, and go to state 137
    KW_CONTINUE   shift, and go to state 138
    KW_RETURN     shift, and go to state 139
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_IF         shift, and go to state 140

    commandList   go to state 222
    command       go to state 199
    func_call     go to state 145
    assign        go to state 146
    if_block      go to state 147
    for_block     go to state 148
    return_block  go to state 149
    while_block   go to state 150
    array_init    go to state 151
    lib_funcs     go to state 152


State 219

   40 commandList: commandList • command
   41 command: • assign
   42        | • if_block
   43        | • for_block
   44        | • return_block
   45        | • while_block
   46        | • KW_BREAK ';'
   47        | • KW_CONTINUE ';'
   48        | • lib_funcs ';'
   49        | • func_call ';'
   50        | • array_init
   72 func_call: • TK_IDENT '(' func_args ')'
   76 assign: • TK_IDENT '=' expr ';'
   77 if_block: • KW_IF '(' expr ')' ':' commandList KW_ENDIF ';'
   78         | • KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'
   78         | KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList • KW_ENDIF ';'
   79 for_block: • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   81 return_block: • KW_RETURN ';'
   82             | • KW_RETURN expr ';'
   83 while_block: • KW_WHILE '(' expr ')' ':' commandList KW_ENDWHILE ';'
   84 array_init: • TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 197
    KW_ENDIF      shift, and go to state 223
    KW_FOR        shift, and go to state 135
    KW_WHILE      shift, and go to state 136
    KW_BREAK      shift, and go to state 137
    KW_CONTINUE   shift, and go to state 138
    KW_RETURN     shift, and go to state 139
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_IF         shift, and go to state 140

    command       go to state 206
    func_call     go to state 145
    assign        go to state 146
    if_block      go to state 147
    for_block     go to state 148
    return_block  go to state 149
    while_block   go to state 150
    array_init    go to state 151
    lib_funcs     go to state 152


State 220

   65 data_types: • KW_INTEGER
   66           | • KW_SCALAR
   67           | • KW_STR
   68           | • KW_BOOLEAN
   84 array_init: TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' • data_types ';'

    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_BOOLEAN  shift, and go to state 46
    KW_STR      shift, and go to state 47

    data_types  go to state 224


State 221

   79 for_block: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' • ':' commandList KW_ENDFOR ';'

    ':'  shift, and go to state 225


State 222

   40 commandList: commandList • command
   41 command: • assign
   42        | • if_block
   43        | • for_block
   44        | • return_block
   45        | • while_block
   46        | • KW_BREAK ';'
   47        | • KW_CONTINUE ';'
   48        | • lib_funcs ';'
   49        | • func_call ';'
   50        | • array_init
   72 func_call: • TK_IDENT '(' func_args ')'
   76 assign: • TK_IDENT '=' expr ';'
   77 if_block: • KW_IF '(' expr ')' ':' commandList KW_ENDIF ';'
   78         | • KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'
   79 for_block: • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   80          | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList • KW_ENDFOR ';'
   81 return_block: • KW_RETURN ';'
   82             | • KW_RETURN expr ';'
   83 while_block: • KW_WHILE '(' expr ')' ':' commandList KW_ENDWHILE ';'
   84 array_init: • TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 197
    KW_FOR        shift, and go to state 135
    KW_ENDFOR     shift, and go to state 226
    KW_WHILE      shift, and go to state 136
    KW_BREAK      shift, and go to state 137
    KW_CONTINUE   shift, and go to state 138
    KW_RETURN     shift, and go to state 139
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_IF         shift, and go to state 140

    command       go to state 206
    func_call     go to state 145
    assign        go to state 146
    if_block      go to state 147
    for_block     go to state 148
    return_block  go to state 149
    while_block   go to state 150
    array_init    go to state 151
    lib_funcs     go to state 152


State 223

   78 if_block: KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF • ';'

    ';'  shift, and go to state 227


State 224

   84 array_init: TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types • ';'

    ';'  shift, and go to state 228


State 225

   39 commandList: • command
   40            | • commandList command
   41 command: • assign
   42        | • if_block
   43        | • for_block
   44        | • return_block
   45        | • while_block
   46        | • KW_BREAK ';'
   47        | • KW_CONTINUE ';'
   48        | • lib_funcs ';'
   49        | • func_call ';'
   50        | • array_init
   72 func_call: • TK_IDENT '(' func_args ')'
   76 assign: • TK_IDENT '=' expr ';'
   77 if_block: • KW_IF '(' expr ')' ':' commandList KW_ENDIF ';'
   78         | • KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'
   79 for_block: • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   79          | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' • commandList KW_ENDFOR ';'
   80          | • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   81 return_block: • KW_RETURN ';'
   82             | • KW_RETURN expr ';'
   83 while_block: • KW_WHILE '(' expr ')' ':' commandList KW_ENDWHILE ';'
   84 array_init: • TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 197
    KW_FOR        shift, and go to state 135
    KW_WHILE      shift, and go to state 136
    KW_BREAK      shift, and go to state 137
    KW_CONTINUE   shift, and go to state 138
    KW_RETURN     shift, and go to state 139
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_IF         shift, and go to state 140

    commandList   go to state 229
    command       go to state 199
    func_call     go to state 145
    assign        go to state 146
    if_block      go to state 147
    for_block     go to state 148
    return_block  go to state 149
    while_block   go to state 150
    array_init    go to state 151
    lib_funcs     go to state 152


State 226

   80 for_block: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR • ';'

    ';'  shift, and go to state 230


State 227

   78 if_block: KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';' •

    $default  reduce using rule 78 (if_block)


State 228

   84 array_init: TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';' •

    $default  reduce using rule 84 (array_init)


State 229

   40 commandList: commandList • command
   41 command: • assign
   42        | • if_block
   43        | • for_block
   44        | • return_block
   45        | • while_block
   46        | • KW_BREAK ';'
   47        | • KW_CONTINUE ';'
   48        | • lib_funcs ';'
   49        | • func_call ';'
   50        | • array_init
   72 func_call: • TK_IDENT '(' func_args ')'
   76 assign: • TK_IDENT '=' expr ';'
   77 if_block: • KW_IF '(' expr ')' ':' commandList KW_ENDIF ';'
   78         | • KW_IF '(' expr ')' ':' commandList KW_ELSE ':' commandList KW_ENDIF ';'
   79 for_block: • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   79          | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList • KW_ENDFOR ';'
   80          | • KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';'
   81 return_block: • KW_RETURN ';'
   82             | • KW_RETURN expr ';'
   83 while_block: • KW_WHILE '(' expr ')' ':' commandList KW_ENDWHILE ';'
   84 array_init: • TK_IDENT TK_ASSGN '[' expr KW_FOR expr ':' expr ']' ':' data_types ';'
   85 lib_funcs: • KW_WRITESTR '(' func_args ')'
   86          | • KW_WRITEINT '(' func_args ')'
   87          | • KW_WRITESCAL '(' func_args ')'
   88          | • KW_READSTR '(' ')'
   89          | • KW_READINT '(' ')'
   90          | • KW_READSCAL '(' ')'

    TK_IDENT      shift, and go to state 197
    KW_FOR        shift, and go to state 135
    KW_ENDFOR     shift, and go to state 231
    KW_WHILE      shift, and go to state 136
    KW_BREAK      shift, and go to state 137
    KW_CONTINUE   shift, and go to state 138
    KW_RETURN     shift, and go to state 139
    KW_READSTR    shift, and go to state 27
    KW_READINT    shift, and go to state 28
    KW_READSCAL   shift, and go to state 29
    KW_WRITESTR   shift, and go to state 30
    KW_WRITEINT   shift, and go to state 31
    KW_WRITESCAL  shift, and go to state 32
    KW_IF         shift, and go to state 140

    command       go to state 206
    func_call     go to state 145
    assign        go to state 146
    if_block      go to state 147
    for_block     go to state 148
    return_block  go to state 149
    while_block   go to state 150
    array_init    go to state 151
    lib_funcs     go to state 152


State 230

   80 for_block: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' commandList KW_ENDFOR ';' •

    $default  reduce using rule 80 (for_block)


State 231

   79 for_block: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR • ';'

    ';'  shift, and go to state 232


State 232

   79 for_block: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' commandList KW_ENDFOR ';' •

    $default  reduce using rule 79 (for_block)
